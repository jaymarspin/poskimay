{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sqlite.service\";\nexport let ProductDefaultQueryRepository = /*#__PURE__*/(() => {\n  class ProductDefaultQueryRepository {\n    constructor(sqliteService) {\n      this.sqliteService = sqliteService;\n    }\n\n    getProducts() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        //create a connection and open\n        const db = yield _this.sqliteService.createConnection(environment.databaseName, false, \"no-encryption\", 1);\n        yield db.open(); //do your queries\n\n        var products = yield db.query(\"select * from products\"); //close the connection\n\n        yield _this.sqliteService.closeConnection(environment.databaseName); //return the data\n\n        return products.values;\n      })();\n    }\n\n  }\n\n  ProductDefaultQueryRepository.ɵfac = function ProductDefaultQueryRepository_Factory(t) {\n    return new (t || ProductDefaultQueryRepository)(i0.ɵɵinject(i1.SQLiteService));\n  };\n\n  ProductDefaultQueryRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductDefaultQueryRepository,\n    factory: ProductDefaultQueryRepository.ɵfac\n  });\n  return ProductDefaultQueryRepository;\n})();","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/repositories/product.default.query.repository.ts"],"names":["environment","i0","i1","ProductDefaultQueryRepository","constructor","sqliteService","getProducts","db","createConnection","databaseName","open","products","query","closeConnection","values","ɵfac","ProductDefaultQueryRepository_Factory","t","ɵɵinject","SQLiteService","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,4BAApB;AACA,WAAaC,6BAAb;AAAO,QAAMA,6BAAN,CAAoC;AACvCC,IAAAA,WAAW,CAACC,aAAD,EAAgB;AACvB,WAAKA,aAAL,GAAqBA,aAArB;AACH;;AACKC,IAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB;AACA,cAAMC,EAAE,SAAS,KAAI,CAACF,aAAL,CAAmBG,gBAAnB,CAAoCR,WAAW,CAACS,YAAhD,EAA8D,KAA9D,EAAqE,eAArE,EAAsF,CAAtF,CAAjB;AACA,cAAMF,EAAE,CAACG,IAAH,EAAN,CAHgB,CAIhB;;AACA,YAAIC,QAAQ,SAASJ,EAAE,CAACK,KAAH,CAAS,wBAAT,CAArB,CALgB,CAMhB;;AACA,cAAM,KAAI,CAACP,aAAL,CAAmBQ,eAAnB,CAAmCb,WAAW,CAACS,YAA/C,CAAN,CAPgB,CAQhB;;AACA,eAAOE,QAAQ,CAACG,MAAhB;AATgB;AAUnB;;AAdsC;;AAgB3CX,EAAAA,6BAA6B,CAACY,IAA9B,GAAqC,SAASC,qCAAT,CAA+CC,CAA/C,EAAkD;AAAE,WAAO,KAAKA,CAAC,IAAId,6BAAV,EAAyCF,EAAE,CAACiB,QAAH,CAAYhB,EAAE,CAACiB,aAAf,CAAzC,CAAP;AAAiF,GAA1K;;AACAhB,EAAAA,6BAA6B,CAACiB,KAA9B,GAAsC,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,IAAAA,KAAK,EAAEnB,6BAAT;AAAwCoB,IAAAA,OAAO,EAAEpB,6BAA6B,CAACY;AAA/E,GAAtB,CAApD;AAjBA,SAAaZ,6BAAb;AAAA","sourcesContent":["import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sqlite.service\";\nexport class ProductDefaultQueryRepository {\n    constructor(sqliteService) {\n        this.sqliteService = sqliteService;\n    }\n    async getProducts() {\n        //create a connection and open\n        const db = await this.sqliteService.createConnection(environment.databaseName, false, \"no-encryption\", 1);\n        await db.open();\n        //do your queries\n        var products = await db.query(\"select * from products\");\n        //close the connection\n        await this.sqliteService.closeConnection(environment.databaseName);\n        //return the data\n        return products.values;\n    }\n}\nProductDefaultQueryRepository.ɵfac = function ProductDefaultQueryRepository_Factory(t) { return new (t || ProductDefaultQueryRepository)(i0.ɵɵinject(i1.SQLiteService)); };\nProductDefaultQueryRepository.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProductDefaultQueryRepository, factory: ProductDefaultQueryRepository.ɵfac });\n"]},"metadata":{},"sourceType":"module"}