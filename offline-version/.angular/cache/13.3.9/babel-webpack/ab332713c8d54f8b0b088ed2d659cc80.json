{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"../../services/detail.service\";\nimport * as i3 from \"@ionic/angular\";\nexport let Testjson192Page = /*#__PURE__*/(() => {\n  class Testjson192Page {\n    constructor(_sqlite, _detailService) {\n      this._sqlite = _sqlite;\n      this._detailService = _detailService;\n      this.initPlugin = false;\n    }\n\n    ngAfterViewInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const showAlert = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (message) {\n            yield Dialog.alert({\n              title: 'Error Dialog',\n              message: message\n            });\n          });\n\n          return function showAlert(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        try {\n          yield _this.runTest();\n          document.querySelector('.sql-allsuccess').classList.remove('display');\n          console.log(\"$$$ runTest was successful\");\n        } catch (err) {\n          document.querySelector('.sql-allfailure').classList.remove('display');\n          console.log(\"$$$ runTest failed\");\n          yield showAlert(err.message);\n        }\n      })();\n    }\n\n    runTest() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          let result = yield _this2._sqlite.echo(\"Hello World\");\n          const JSONSchema = {\n            database: 'storage-192',\n            version: 1,\n            encrypted: false,\n            mode: 'full',\n            tables: [{\n              name: 'routes',\n              schema: [{\n                column: 'id',\n                value: 'TEXT NOT NULL'\n              }, {\n                column: 'name',\n                value: 'TEXT NOT NULL'\n              }, {\n                column: 'date',\n                value: 'TEXT NOT NULL'\n              }, {\n                constraint: 'routes_pk',\n                value: 'PRIMARY KEY (id)'\n              }],\n              indexes: [{\n                name: 'routes_id_uindex',\n                value: 'id'\n              }, {\n                name: 'routes_name_uindex',\n                value: 'name'\n              }]\n            }, {\n              name: 'route_points',\n              schema: [{\n                column: 'id',\n                value: 'INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL'\n              }, {\n                column: 'route_id',\n                value: 'TEXT NOT NULL'\n              }, {\n                column: 'accuracy',\n                value: 'REAL'\n              }, {\n                column: 'altitude',\n                value: 'REAL'\n              }, {\n                column: 'altitudeAccuracy',\n                value: 'REAL'\n              }, {\n                column: 'heading',\n                value: 'REAL'\n              }, {\n                column: 'latitude',\n                value: 'REAL'\n              }, {\n                column: 'longitude',\n                value: 'REAL'\n              }, {\n                column: 'speed',\n                value: 'REAL'\n              }, {\n                column: 'TIMESTAMP',\n                value: 'INTEGER'\n              }, {\n                foreignkey: 'route_id',\n                value: 'REFERENCES routes(id) ON DELETE CASCADE'\n              }],\n              indexes: [{\n                name: 'route_points_id_uindex',\n                value: 'id'\n              }]\n            }]\n          }; // ************************************************\n          // Import Json Object Issue#71\n          // ************************************************\n          // test Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(JSONSchema));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJson failed\"));\n          } // full import\n\n\n          result = yield _this2._sqlite.importFromJson(JSON.stringify(JSONSchema));\n          if (result.changes.changes === -1) return Promise.reject(new Error(\"ImportFromJson 'full' failed\")); // ************************************************\n          // Query\n          // ************************************************\n          // create the connection to the database\n\n          let db = yield _this2._sqlite.createConnection(\"storage-192\", false, \"no-encryption\", 1);\n          if (db === null) return Promise.reject(new Error(\"CreateConnection storage-192 failed\")); // open db testNew\n\n          yield db.open();\n          const tableQuery = `SELECT name FROM sqlite_master WHERE type='table' AND name='routes';`;\n          const tableResult = yield db.query(tableQuery);\n\n          if (tableResult.values.length === 0) {\n            console.log('table bestaat niet');\n            const result = yield _this2._sqlite.isJsonValid(JSON.stringify(JSONSchema));\n            console.log(result);\n\n            if (!result.result) {\n              return Promise.reject(new Error(`isJsonValid: \"schemaToImport179\" is not valid`));\n            }\n\n            const resJson = yield _this2._sqlite.importFromJson(JSON.stringify(JSONSchema));\n            console.log(resJson);\n\n            if (resJson.changes && resJson.changes.changes && resJson.changes.changes < 0) {\n              return Promise.reject(new Error(`importFromJson: \"full\" failed`));\n            }\n          } // close the connection\n\n\n          yield _this2._sqlite.closeConnection(\"storage-192\");\n          return Promise.resolve();\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      })();\n    }\n\n  }\n\n  Testjson192Page.ɵfac = function Testjson192Page_Factory(t) {\n    return new (t || Testjson192Page)(i0.ɵɵdirectiveInject(i1.SQLiteService), i0.ɵɵdirectiveInject(i2.DetailService));\n  };\n\n  Testjson192Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Testjson192Page,\n    selectors: [[\"app-testjson192\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]],\n    template: function Testjson192Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestJson#192 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestJson#192\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonBackButton, i3.IonBackButtonDelegate, i3.IonTitle, i3.IonContent, i3.IonCard, i3.IonCardTitle],\n    styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rqc29uMTkyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3Rqc29uMTkyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"]\n  });\n  return Testjson192Page;\n})();","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/testjson192/testjson192.page.ts"],"names":["Dialog","i0","i1","i2","i3","Testjson192Page","constructor","_sqlite","_detailService","initPlugin","ngAfterViewInit","showAlert","message","alert","title","runTest","document","querySelector","classList","remove","console","log","err","result","echo","JSONSchema","database","version","encrypted","mode","tables","name","schema","column","value","constraint","indexes","foreignkey","isJsonValid","JSON","stringify","Promise","reject","Error","importFromJson","changes","db","createConnection","open","tableQuery","tableResult","query","values","length","resJson","closeConnection","resolve","ɵfac","Testjson192Page_Factory","t","ɵɵdirectiveInject","SQLiteService","DetailService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","Testjson192Page_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance","directives","IonHeader","IonToolbar","IonButtons","IonBackButton","IonBackButtonDelegate","IonTitle","IonContent","IonCard","IonCardTitle","styles"],"mappings":"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","sourcesContent":["import { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"../../services/detail.service\";\nimport * as i3 from \"@ionic/angular\";\nexport class Testjson192Page {\n    constructor(_sqlite, _detailService) {\n        this._sqlite = _sqlite;\n        this._detailService = _detailService;\n        this.initPlugin = false;\n    }\n    async ngAfterViewInit() {\n        const showAlert = async (message) => {\n            await Dialog.alert({\n                title: 'Error Dialog',\n                message: message,\n            });\n        };\n        try {\n            await this.runTest();\n            document.querySelector('.sql-allsuccess').classList\n                .remove('display');\n            console.log(\"$$$ runTest was successful\");\n        }\n        catch (err) {\n            document.querySelector('.sql-allfailure').classList\n                .remove('display');\n            console.log(\"$$$ runTest failed\");\n            await showAlert(err.message);\n        }\n    }\n    async runTest() {\n        try {\n            let result = await this._sqlite.echo(\"Hello World\");\n            const JSONSchema = {\n                database: 'storage-192',\n                version: 1,\n                encrypted: false,\n                mode: 'full',\n                tables: [\n                    { name: 'routes',\n                        schema: [\n                            { column: 'id', value: 'TEXT NOT NULL' },\n                            { column: 'name', value: 'TEXT NOT NULL' },\n                            { column: 'date', value: 'TEXT NOT NULL' },\n                            { constraint: 'routes_pk', value: 'PRIMARY KEY (id)' },\n                        ],\n                        indexes: [\n                            { name: 'routes_id_uindex', value: 'id' },\n                            { name: 'routes_name_uindex', value: 'name' },\n                        ],\n                    },\n                    { name: 'route_points',\n                        schema: [\n                            { column: 'id', value: 'INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL' },\n                            { column: 'route_id', value: 'TEXT NOT NULL' },\n                            { column: 'accuracy', value: 'REAL' },\n                            { column: 'altitude', value: 'REAL' },\n                            { column: 'altitudeAccuracy', value: 'REAL' },\n                            { column: 'heading', value: 'REAL' },\n                            { column: 'latitude', value: 'REAL' },\n                            { column: 'longitude', value: 'REAL' },\n                            { column: 'speed', value: 'REAL' },\n                            { column: 'TIMESTAMP', value: 'INTEGER' },\n                            { foreignkey: 'route_id', value: 'REFERENCES routes(id) ON DELETE CASCADE', },\n                        ],\n                        indexes: [\n                            { name: 'route_points_id_uindex', value: 'id' },\n                        ],\n                    },\n                ],\n            };\n            // ************************************************\n            // Import Json Object Issue#71\n            // ************************************************\n            // test Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(JSONSchema));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJson failed\"));\n            }\n            // full import\n            result = await this._sqlite\n                .importFromJson(JSON.stringify(JSONSchema));\n            if (result.changes.changes === -1)\n                return Promise.reject(new Error(\"ImportFromJson 'full' failed\"));\n            // ************************************************\n            // Query\n            // ************************************************\n            // create the connection to the database\n            let db = await this._sqlite\n                .createConnection(\"storage-192\", false, \"no-encryption\", 1);\n            if (db === null)\n                return Promise.reject(new Error(\"CreateConnection storage-192 failed\"));\n            // open db testNew\n            await db.open();\n            const tableQuery = `SELECT name FROM sqlite_master WHERE type='table' AND name='routes';`;\n            const tableResult = await db.query(tableQuery);\n            if (tableResult.values.length === 0) {\n                console.log('table bestaat niet');\n                const result = await this._sqlite.isJsonValid(JSON.stringify(JSONSchema));\n                console.log(result);\n                if (!result.result) {\n                    return Promise.reject(new Error(`isJsonValid: \"schemaToImport179\" is not valid`));\n                }\n                const resJson = await this._sqlite.importFromJson(JSON.stringify(JSONSchema));\n                console.log(resJson);\n                if (resJson.changes && resJson.changes.changes && resJson.changes.changes < 0) {\n                    return Promise.reject(new Error(`importFromJson: \"full\" failed`));\n                }\n            }\n            // close the connection\n            await this._sqlite.closeConnection(\"storage-192\");\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n}\nTestjson192Page.ɵfac = function Testjson192Page_Factory(t) { return new (t || Testjson192Page)(i0.ɵɵdirectiveInject(i1.SQLiteService), i0.ɵɵdirectiveInject(i2.DetailService)); };\nTestjson192Page.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Testjson192Page, selectors: [[\"app-testjson192\"]], decls: 19, vars: 2, consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]], template: function Testjson192Page_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestJson#192 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestJson#192\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n    } }, directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonBackButton, i3.IonBackButtonDelegate, i3.IonTitle, i3.IonContent, i3.IonCard, i3.IonCardTitle], styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rqc29uMTkyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3Rqc29uMTkyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}