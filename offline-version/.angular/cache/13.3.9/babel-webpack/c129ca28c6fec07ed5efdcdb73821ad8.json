{"ast":null,"code":"export const createSchemaVersion1 = `\nCREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    name TEXT,\n    company TEXT,\n    size REAL,\n    age INTEGER,\n    sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))    \n);\nCREATE INDEX IF NOT EXISTS users_index_name ON users (name);\nCREATE INDEX IF NOT EXISTS users_index_last_modified ON users (last_modified);\nCREATE TRIGGER IF NOT EXISTS users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\n`; // Insert some Users\n\nconst row = [[\"Whiteley\", \"Whiteley.com\", 30.5], [\"Jones\", \"Jones.com\", 44]];\nexport const twoUsers = `\nINSERT INTO users (name,email,age) VALUES (\"${row[0][0]}\",\"${row[0][1]}\",${row[0][2]});\nINSERT INTO users (name,email,age) VALUES (\"${row[1][0]}\",\"${row[1][1]}\",${row[1][2]});\n`;\nexport const createSchemaVersion2 = `\nCREATE TABLE users (\n  id INTEGER PRIMARY KEY NOT NULL,\n  email TEXT UNIQUE NOT NULL,\n  name TEXT,\n  company TEXT,\n  country TEXT,\n  age INTEGER,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now'))       \n);\nCREATE TABLE messages (\n  id INTEGER PRIMARY KEY NOT NULL,\n  userid INTEGER,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now')),        \n  FOREIGN KEY (userid) REFERENCES users(id) ON DELETE SET DEFAULT\n);\nCREATE INDEX users_index_name ON users (name);\nCREATE INDEX users_index_last_modified ON users (last_modified);\nCREATE INDEX messages_index_title ON messages (title);\nCREATE INDEX messages_index_last_modified ON messages (last_modified);\nCREATE TRIGGER users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER messages_trigger_last_modified\nAFTER UPDATE ON messages\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE messages SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\n`;\nexport const setArrayVersion2 = [{\n  statement: \"INSERT INTO messages (userid,title,body) VALUES (?,?,?);\",\n  values: [[1, \"test message 1\", \"content test message 1\"], [2, \"test message 2\", \"content test message 2\"], [1, \"test message 3\", \"content test message 3\"]]\n}, {\n  statement: \"UPDATE users SET country = ?  WHERE id = ?;\",\n  values: [\"United Kingdom\", 1]\n}, {\n  statement: \"UPDATE users SET country = ?  WHERE id = ?;\",\n  values: [\"Australia\", 2]\n}];\nexport const userMessages = `\nSELECT users.name,messages.title,messages.body FROM users\n INNER JOIN messages ON users.id = messages.userid\n WHERE users.id = ?;\n`;","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/utils/upgrade-version-utils.ts"],"names":["createSchemaVersion1","row","twoUsers","createSchemaVersion2","setArrayVersion2","statement","values","userMessages"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBO,C,CAoBP;;AACA,MAAMC,GAAG,GAAG,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,IAA7B,CAAD,EAAqC,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAArC,CAAZ;AACA,OAAO,MAAMC,QAAQ,GAAI;AACzB,8CAA8CD,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,MAAKA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,KAAIA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU;AACrF,8CAA8CA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,MAAKA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,KAAIA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU;AACrF,CAHO;AAIP,OAAO,MAAME,oBAAoB,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCO;AAqCP,OAAO,MAAMC,gBAAgB,GAAG,CAC5B;AAAEC,EAAAA,SAAS,EAAE,0DAAb;AACIC,EAAAA,MAAM,EAAE,CACJ,CAAC,CAAD,EAAI,gBAAJ,EAAsB,wBAAtB,CADI,EAEJ,CAAC,CAAD,EAAI,gBAAJ,EAAsB,wBAAtB,CAFI,EAGJ,CAAC,CAAD,EAAI,gBAAJ,EAAsB,wBAAtB,CAHI;AADZ,CAD4B,EAQ5B;AAAED,EAAAA,SAAS,EAAE,6CAAb;AACIC,EAAAA,MAAM,EAAE,CAAC,gBAAD,EAAmB,CAAnB;AADZ,CAR4B,EAW5B;AAAED,EAAAA,SAAS,EAAE,6CAAb;AACIC,EAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,CAAd;AADZ,CAX4B,CAAzB;AAeP,OAAO,MAAMC,YAAY,GAAI;AAC7B;AACA;AACA;AACA,CAJO","sourcesContent":["export const createSchemaVersion1 = `\nCREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    name TEXT,\n    company TEXT,\n    size REAL,\n    age INTEGER,\n    sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))    \n);\nCREATE INDEX IF NOT EXISTS users_index_name ON users (name);\nCREATE INDEX IF NOT EXISTS users_index_last_modified ON users (last_modified);\nCREATE TRIGGER IF NOT EXISTS users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\n`;\n// Insert some Users\nconst row = [[\"Whiteley\", \"Whiteley.com\", 30.5], [\"Jones\", \"Jones.com\", 44]];\nexport const twoUsers = `\nINSERT INTO users (name,email,age) VALUES (\"${row[0][0]}\",\"${row[0][1]}\",${row[0][2]});\nINSERT INTO users (name,email,age) VALUES (\"${row[1][0]}\",\"${row[1][1]}\",${row[1][2]});\n`;\nexport const createSchemaVersion2 = `\nCREATE TABLE users (\n  id INTEGER PRIMARY KEY NOT NULL,\n  email TEXT UNIQUE NOT NULL,\n  name TEXT,\n  company TEXT,\n  country TEXT,\n  age INTEGER,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now'))       \n);\nCREATE TABLE messages (\n  id INTEGER PRIMARY KEY NOT NULL,\n  userid INTEGER,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now')),        \n  FOREIGN KEY (userid) REFERENCES users(id) ON DELETE SET DEFAULT\n);\nCREATE INDEX users_index_name ON users (name);\nCREATE INDEX users_index_last_modified ON users (last_modified);\nCREATE INDEX messages_index_title ON messages (title);\nCREATE INDEX messages_index_last_modified ON messages (last_modified);\nCREATE TRIGGER users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER messages_trigger_last_modified\nAFTER UPDATE ON messages\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE messages SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\n`;\nexport const setArrayVersion2 = [\n    { statement: \"INSERT INTO messages (userid,title,body) VALUES (?,?,?);\",\n        values: [\n            [1, \"test message 1\", \"content test message 1\"],\n            [2, \"test message 2\", \"content test message 2\"],\n            [1, \"test message 3\", \"content test message 3\"]\n        ]\n    },\n    { statement: \"UPDATE users SET country = ?  WHERE id = ?;\",\n        values: [\"United Kingdom\", 1]\n    },\n    { statement: \"UPDATE users SET country = ?  WHERE id = ?;\",\n        values: [\"Australia\", 2]\n    },\n];\nexport const userMessages = `\nSELECT users.name,messages.title,messages.body FROM users\n INNER JOIN messages ON users.id = messages.userid\n WHERE users.id = ?;\n`;\n"]},"metadata":{},"sourceType":"module"}