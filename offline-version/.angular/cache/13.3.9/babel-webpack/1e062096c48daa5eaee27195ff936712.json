{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { schemaToImport237, contactsToImportPartial237, messagesToImportPartial237, schemaToImport240 } from '../utils/import-json-utils';\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"@ionic/angular\";\nexport let Testjson237Page = /*#__PURE__*/(() => {\n  class Testjson237Page {\n    constructor(_sqlite) {\n      this._sqlite = _sqlite;\n      this.initPlugin = false;\n    }\n\n    ngAfterViewInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const showAlert = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (message) {\n            yield Dialog.alert({\n              title: 'Error Dialog',\n              message: message\n            });\n          });\n\n          return function showAlert(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        try {\n          yield _this.runTest();\n          document.querySelector('.sql-allsuccess').classList.remove('display');\n          console.log(\"$$$ runTest was successful\");\n        } catch (err) {\n          document.querySelector('.sql-allfailure').classList.remove('display');\n          console.log(\"$$$ runTest failed\");\n          yield showAlert(err.message);\n        }\n      })();\n    }\n\n    runTest() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          let result = yield _this2._sqlite.echo(\"Hello World\"); // ************************************************\n          // Import Json Object Issue#231\n          // ************************************************\n          // test Full Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(schemaToImport237));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid Full failed\"));\n          } // full import create schema only\n\n\n          result = yield _this2._sqlite.importFromJson(JSON.stringify(schemaToImport237));\n          if (result.changes.changes === -1) return Promise.reject(new Error(\"ImportFromJson 'full' failed\")); // test Partial contacts Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(contactsToImportPartial237));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid Contacts Partial failed\"));\n          } // partial import load the data\n\n\n          result = yield _this2._sqlite.importFromJson(JSON.stringify(contactsToImportPartial237));\n          if (result.changes.changes === -1) return Promise.reject(new Error(\"ImportFromJson Contacts 'partial' failed\")); // test Partial messages Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(messagesToImportPartial237));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid Messages Partial failed\"));\n          } // partial import load the data\n\n\n          result = yield _this2._sqlite.importFromJson(JSON.stringify(messagesToImportPartial237));\n          if (result.changes.changes === -1) return Promise.reject(new Error(\"ImportFromJson Messages 'partial' failed\")); // create the connection to the database\n\n          const db = yield _this2._sqlite.createConnection(\"test_issue237\", false, \"no-encryption\", 1);\n          if (db === null) return Promise.reject(new Error(\"CreateConnection test_issue237 failed\")); // open db test_issue237\n\n          yield db.open(); // select all contacts in db\n\n          let ret = yield db.query(\"SELECT * FROM contacts;\");\n\n          if (ret.values.length !== 4 || ret.values[0].name !== \"Whiteley\" || ret.values[1].name !== \"Jones\" || ret.values[2].name !== \"Simpson\" || ret.values[3].name !== \"Brown\") {\n            return Promise.reject(new Error(\"Query contacts failed\"));\n          } // select all messages in db\n\n\n          ret = yield db.query(\"SELECT * FROM messages;\");\n\n          if (ret.values.length !== 2 || ret.values[0][\"title\"] !== \"test post 1\" || ret.values[1][\"title\"] !== \"test post 2\") {\n            return Promise.reject(new Error(\"Query messages failed\"));\n          } // ************************************************\n          // Export Json Object from an Existing Database\n          // ************************************************\n\n          /*\n                // export json full\n                let jsonObj: any = await db.exportToJson('full');\n              \n                // test Json object validity\n                result = await this._sqlite\n                                      .isJsonValid(JSON.stringify(jsonObj.export));\n                if(!result.result) {\n                  return Promise.reject(new Error(\"IsJsonValid export 'full' failed\"));\n                }\n          \n                // export json partial\n          /*      jsonObj = await db.exportToJson('partial');\n              \n                // test Json object validity\n                result = await this._sqlite\n                                      .isJsonValid(JSON.stringify(jsonObj.export));\n                if(!result.result) {\n                  return Promise.reject(new Error(\"IsJsonValid export 'partial' failed\"));\n                }\n          */\n          // close the connection\n\n\n          const is237Con = (yield _this2._sqlite.isConnection(\"test_issue237\")).result;\n          if (is237Con) yield _this2._sqlite.closeConnection(\"test_issue237\"); // ************************************************\n          // Import Json Object Issue#240\n          // ************************************************\n          // test Full Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(schemaToImport240));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid #240 Full failed\"));\n          } // full import create schema only\n\n\n          result = yield _this2._sqlite.importFromJson(JSON.stringify(schemaToImport240));\n          if (result.changes.changes === -1) return Promise.reject(new Error(\"ImportFromJson #240 'full' failed\")); // create the connection to the database\n\n          const db1 = yield _this2._sqlite.createConnection(\"test_issue240\", false, \"no-encryption\", 1);\n          if (db1 === null) return Promise.reject(new Error(\"CreateConnection test_issue240 failed\")); // open db test_issue240\n\n          yield db1.open();\n          const insertStmt = `INSERT INTO task_list (delivers,reads,status,files,_id,title,du,cid,assignee,oid,type,createAt,updateAt,cInfo,last,category) VALUES ('[]','[]','progress','[]','60857f2bd04e5800ce4720b7','test group updat','2021-04-25T14:39:20.220Z','60616972bf1ab71fef2926eb',9122223,912222208,'task','2021-04-25T14:39:39.779Z','2021-10-19T11:08:50.271Z','{\"912228\":0,\"9192226\":9,\"912222233\":0}','{\"sender\":91222273,\"msg\":\"here\"}','Work') ON CONFLICT (_id) DO UPDATE SET delivers='[]',reads='[]',status='progress',files='[]',_id='60857f2bd04e5800ce4720b7',title='test group updat',du='2021-04-25T14:39:20.220Z',cid='60616972bf1ab71fef2926eb',assignee=912222273,oid=918056598408,type='task',createAt='2021-04-25T14:39:39.779Z',updateAt='2021-10-19T11:08:50.271Z',cInfo='{\"912222280\":0,\"9122222216\":9,\"918012430333\":0}',last='{\"sender\":912222273,\"msg\":\"here\"}',category='Work' `;\n          ret = yield db1.run(insertStmt);\n          const queryStmt = `SELECT * From task_list WHERE status != 'closed' order by updateAt desc limit 10 offset 0`;\n          ret = yield db1.query(queryStmt);\n          const is240Con = (yield _this2._sqlite.isConnection(\"test_issue240\")).result; // close the connection\n\n          yield _this2._sqlite.closeConnection(\"test_issue240\");\n          return Promise.resolve();\n        } catch (err) {\n          // close the connection\n          const is237Con = (yield _this2._sqlite.isConnection(\"test_issue237\")).result;\n          if (is237Con) yield _this2._sqlite.closeConnection(\"test_issue237\");\n          const is240Con = (yield _this2._sqlite.isConnection(\"test_issue240\")).result;\n          if (is240Con) yield _this2._sqlite.closeConnection(\"test_issue240\");\n          console.log(`Error: ${err}`);\n          return Promise.reject(err);\n        }\n      })();\n    }\n\n  }\n\n  Testjson237Page.ɵfac = function Testjson237Page_Factory(t) {\n    return new (t || Testjson237Page)(i0.ɵɵdirectiveInject(i1.SQLiteService));\n  };\n\n  Testjson237Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Testjson237Page,\n    selectors: [[\"app-testjson237\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]],\n    template: function Testjson237Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestJson#237 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestJson#237\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonCard, i2.IonCardTitle],\n    styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rqc29uMjM3LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3Rqc29uMjM3LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"]\n  });\n  return Testjson237Page;\n})();","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/testjson237/testjson237.page.ts"],"names":["schemaToImport237","contactsToImportPartial237","messagesToImportPartial237","schemaToImport240","Dialog","i0","i1","i2","Testjson237Page","constructor","_sqlite","initPlugin","ngAfterViewInit","showAlert","message","alert","title","runTest","document","querySelector","classList","remove","console","log","err","result","echo","isJsonValid","JSON","stringify","Promise","reject","Error","importFromJson","changes","db","createConnection","open","ret","query","values","length","name","is237Con","isConnection","closeConnection","db1","insertStmt","run","queryStmt","is240Con","resolve","ɵfac","Testjson237Page_Factory","t","ɵɵdirectiveInject","SQLiteService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","Testjson237Page_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance","directives","IonHeader","IonToolbar","IonButtons","IonBackButton","IonBackButtonDelegate","IonTitle","IonContent","IonCard","IonCardTitle","styles"],"mappings":"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","sourcesContent":["import { schemaToImport237, contactsToImportPartial237, messagesToImportPartial237, schemaToImport240 } from '../utils/import-json-utils';\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"@ionic/angular\";\nexport class Testjson237Page {\n    constructor(_sqlite) {\n        this._sqlite = _sqlite;\n        this.initPlugin = false;\n    }\n    async ngAfterViewInit() {\n        const showAlert = async (message) => {\n            await Dialog.alert({\n                title: 'Error Dialog',\n                message: message,\n            });\n        };\n        try {\n            await this.runTest();\n            document.querySelector('.sql-allsuccess').classList\n                .remove('display');\n            console.log(\"$$$ runTest was successful\");\n        }\n        catch (err) {\n            document.querySelector('.sql-allfailure').classList\n                .remove('display');\n            console.log(\"$$$ runTest failed\");\n            await showAlert(err.message);\n        }\n    }\n    async runTest() {\n        try {\n            let result = await this._sqlite.echo(\"Hello World\");\n            // ************************************************\n            // Import Json Object Issue#231\n            // ************************************************\n            // test Full Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(schemaToImport237));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid Full failed\"));\n            }\n            // full import create schema only\n            result = await this._sqlite\n                .importFromJson(JSON.stringify(schemaToImport237));\n            if (result.changes.changes === -1)\n                return Promise.reject(new Error(\"ImportFromJson 'full' failed\"));\n            // test Partial contacts Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(contactsToImportPartial237));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid Contacts Partial failed\"));\n            }\n            // partial import load the data\n            result = await this._sqlite\n                .importFromJson(JSON.stringify(contactsToImportPartial237));\n            if (result.changes.changes === -1)\n                return Promise.reject(new Error(\"ImportFromJson Contacts 'partial' failed\"));\n            // test Partial messages Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(messagesToImportPartial237));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid Messages Partial failed\"));\n            }\n            // partial import load the data\n            result = await this._sqlite\n                .importFromJson(JSON.stringify(messagesToImportPartial237));\n            if (result.changes.changes === -1)\n                return Promise.reject(new Error(\"ImportFromJson Messages 'partial' failed\"));\n            // create the connection to the database\n            const db = await this._sqlite\n                .createConnection(\"test_issue237\", false, \"no-encryption\", 1);\n            if (db === null)\n                return Promise.reject(new Error(\"CreateConnection test_issue237 failed\"));\n            // open db test_issue237\n            await db.open();\n            // select all contacts in db\n            let ret = await db.query(\"SELECT * FROM contacts;\");\n            if (ret.values.length !== 4 || ret.values[0].name !== \"Whiteley\" ||\n                ret.values[1].name !== \"Jones\" ||\n                ret.values[2].name !== \"Simpson\" ||\n                ret.values[3].name !== \"Brown\") {\n                return Promise.reject(new Error(\"Query contacts failed\"));\n            }\n            // select all messages in db\n            ret = await db.query(\"SELECT * FROM messages;\");\n            if (ret.values.length !== 2 || ret.values[0][\"title\"] !== \"test post 1\" ||\n                ret.values[1][\"title\"] !== \"test post 2\") {\n                return Promise.reject(new Error(\"Query messages failed\"));\n            }\n            // ************************************************\n            // Export Json Object from an Existing Database\n            // ************************************************\n            /*\n                  // export json full\n                  let jsonObj: any = await db.exportToJson('full');\n                \n                  // test Json object validity\n                  result = await this._sqlite\n                                        .isJsonValid(JSON.stringify(jsonObj.export));\n                  if(!result.result) {\n                    return Promise.reject(new Error(\"IsJsonValid export 'full' failed\"));\n                  }\n            \n                  // export json partial\n            /*      jsonObj = await db.exportToJson('partial');\n                \n                  // test Json object validity\n                  result = await this._sqlite\n                                        .isJsonValid(JSON.stringify(jsonObj.export));\n                  if(!result.result) {\n                    return Promise.reject(new Error(\"IsJsonValid export 'partial' failed\"));\n                  }\n            */\n            // close the connection\n            const is237Con = (await this._sqlite.isConnection(\"test_issue237\")).result;\n            if (is237Con)\n                await this._sqlite.closeConnection(\"test_issue237\");\n            // ************************************************\n            // Import Json Object Issue#240\n            // ************************************************\n            // test Full Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(schemaToImport240));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid #240 Full failed\"));\n            }\n            // full import create schema only\n            result = await this._sqlite\n                .importFromJson(JSON.stringify(schemaToImport240));\n            if (result.changes.changes === -1)\n                return Promise.reject(new Error(\"ImportFromJson #240 'full' failed\"));\n            // create the connection to the database\n            const db1 = await this._sqlite\n                .createConnection(\"test_issue240\", false, \"no-encryption\", 1);\n            if (db1 === null)\n                return Promise.reject(new Error(\"CreateConnection test_issue240 failed\"));\n            // open db test_issue240\n            await db1.open();\n            const insertStmt = `INSERT INTO task_list (delivers,reads,status,files,_id,title,du,cid,assignee,oid,type,createAt,updateAt,cInfo,last,category) VALUES ('[]','[]','progress','[]','60857f2bd04e5800ce4720b7','test group updat','2021-04-25T14:39:20.220Z','60616972bf1ab71fef2926eb',9122223,912222208,'task','2021-04-25T14:39:39.779Z','2021-10-19T11:08:50.271Z','{\"912228\":0,\"9192226\":9,\"912222233\":0}','{\"sender\":91222273,\"msg\":\"here\"}','Work') ON CONFLICT (_id) DO UPDATE SET delivers='[]',reads='[]',status='progress',files='[]',_id='60857f2bd04e5800ce4720b7',title='test group updat',du='2021-04-25T14:39:20.220Z',cid='60616972bf1ab71fef2926eb',assignee=912222273,oid=918056598408,type='task',createAt='2021-04-25T14:39:39.779Z',updateAt='2021-10-19T11:08:50.271Z',cInfo='{\"912222280\":0,\"9122222216\":9,\"918012430333\":0}',last='{\"sender\":912222273,\"msg\":\"here\"}',category='Work' `;\n            ret = await db1.run(insertStmt);\n            const queryStmt = `SELECT * From task_list WHERE status != 'closed' order by updateAt desc limit 10 offset 0`;\n            ret = await db1.query(queryStmt);\n            const is240Con = (await this._sqlite.isConnection(\"test_issue240\")).result;\n            // close the connection\n            await this._sqlite.closeConnection(\"test_issue240\");\n            return Promise.resolve();\n        }\n        catch (err) {\n            // close the connection\n            const is237Con = (await this._sqlite.isConnection(\"test_issue237\")).result;\n            if (is237Con)\n                await this._sqlite.closeConnection(\"test_issue237\");\n            const is240Con = (await this._sqlite.isConnection(\"test_issue240\")).result;\n            if (is240Con)\n                await this._sqlite.closeConnection(\"test_issue240\");\n            console.log(`Error: ${err}`);\n            return Promise.reject(err);\n        }\n    }\n}\nTestjson237Page.ɵfac = function Testjson237Page_Factory(t) { return new (t || Testjson237Page)(i0.ɵɵdirectiveInject(i1.SQLiteService)); };\nTestjson237Page.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Testjson237Page, selectors: [[\"app-testjson237\"]], decls: 19, vars: 2, consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]], template: function Testjson237Page_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestJson#237 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestJson#237\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n    } }, directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonCard, i2.IonCardTitle], styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rqc29uMjM3LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3Rqc29uMjM3LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}