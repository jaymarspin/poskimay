{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { testIssue292 } from '../utils/import-json-utils';\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\n\nfunction Testjson292Page_ion_list_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\")(1, \"ion-item\")(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r1.content, \"\");\n  }\n}\n\nexport let Testjson292Page = /*#__PURE__*/(() => {\n  class Testjson292Page {\n    constructor(_sqlite) {\n      this._sqlite = _sqlite;\n      this.inbox = [];\n      this.initPlugin = false;\n    }\n\n    ngAfterViewInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const showAlert = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (message) {\n            yield Dialog.alert({\n              title: 'Error Dialog',\n              message: message\n            });\n          });\n\n          return function showAlert(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        try {\n          yield _this.runTest();\n          document.querySelector('.sql-allsuccess').classList.remove('display');\n          console.log(\"$$$ runTest was successful\");\n        } catch (err) {\n          document.querySelector('.sql-allfailure').classList.remove('display');\n          let msg = err.message ? err.message : err;\n          yield showAlert(msg);\n          console.log(`$$$ runTest failed ${msg}`);\n        }\n      })();\n    }\n\n    runTest() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          let result = yield _this2._sqlite.echo(\"Hello World\"); // ************************************************\n          // Import Json Object Issue#292\n          // ************************************************\n          // test Full Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(testIssue292));\n          console.log(`isJsonValid ${result.result} `);\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid testIssue292 Full failed\"));\n          } // full import \n\n\n          result = yield _this2._sqlite.importFromJson(JSON.stringify(testIssue292));\n          console.log(`importFromJson ${JSON.stringify(result)} `);\n          if (result.changes.changes === -1) return Promise.reject(new Error(\"ImportFromJson V1 'full' failed\"));\n          console.log(`>>> Import testIssue292 changes: ${result.changes.changes}`); // create the connection to the database\n\n          let db = yield _this2._sqlite.createConnection(\"db-issue292\", false, \"no-encryption\", 1);\n          if (db === null) return Promise.reject(new Error(\"CreateConnection db-issue292 failed\")); // open db db-issue292\n\n          yield db.open(); // create synchronization table \n\n          result = yield db.createSyncTable();\n          if (result.changes.changes < 0) return Promise.reject(new Error(\"CreateSyncTable failed\"));\n          result = yield db.getSyncDate();\n          if (result.length === 0) return Promise.reject(new Error(\"GetSyncDate failed\")); // select inbox in db\n\n          let ret = yield db.query('SELECT * FROM inbox;');\n\n          if (ret.values.length !== 4 || ret.values[0].id !== 1 || ret.values[1].id !== 2 || ret.values[2].id !== 3 || ret.values[3].id !== 4) {\n            return Promise.reject(new Error(\"Query inbox failed\"));\n          }\n\n          _this2.inbox = [...ret.values];\n          console.log(`this.inbox \\n ${JSON.stringify(_this2.inbox)}`); // ************************************************\n          // Export Json Object from an Existing Database\n          // ************************************************\n          // export json full\n\n          let jsonObj = yield db.exportToJson('full'); // test Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(jsonObj.export));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid export 'full' failed\"));\n          }\n\n          console.log(`Json returned from Full Export \\n ${JSON.stringify(jsonObj.export)}`); // close the connection\n\n          yield _this2._sqlite.closeConnection(\"db-issue292\");\n          return Promise.resolve();\n        } catch (err) {\n          // close the connection\n          const isConn = (yield _this2._sqlite.isConnection(\"db-issue292\")).result;\n          if (isConn) yield _this2._sqlite.closeConnection(\"db-issue292\");\n          return Promise.reject(err);\n        }\n      })();\n    }\n\n  }\n\n  Testjson292Page.ɵfac = function Testjson292Page_Factory(t) {\n    return new (t || Testjson292Page)(i0.ɵɵdirectiveInject(i1.SQLiteService));\n  };\n\n  Testjson292Page.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Testjson292Page,\n    selectors: [[\"app-testjson292\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"], [1, \"card-inbox\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function Testjson292Page_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestJson#292 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestJson#292\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"ion-card\", 10)(20, \"ion-card-title\");\n        i0.ɵɵtext(21, \" INBOX \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, Testjson292Page_ion_list_22_Template, 4, 1, \"ion-list\", 11);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.inbox);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonCard, i2.IonCardTitle, i3.NgForOf, i2.IonList, i2.IonItem, i2.IonLabel],\n    styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rqc29uMjkyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3Rqc29uMjkyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"]\n  });\n  return Testjson292Page;\n})();","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/testjson292/testjson292.page.ts"],"names":["testIssue292","Dialog","i0","i1","i2","i3","Testjson292Page_ion_list_22_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","message_r1","$implicit","ɵɵadvance","ɵɵtextInterpolate1","content","Testjson292Page","constructor","_sqlite","inbox","initPlugin","ngAfterViewInit","showAlert","message","alert","title","runTest","document","querySelector","classList","remove","console","log","err","msg","result","echo","isJsonValid","JSON","stringify","Promise","reject","Error","importFromJson","changes","db","createConnection","open","createSyncTable","getSyncDate","length","ret","query","values","id","jsonObj","exportToJson","export","closeConnection","resolve","isConn","isConnection","ɵfac","Testjson292Page_Factory","t","ɵɵdirectiveInject","SQLiteService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","Testjson292Page_Template","ɵɵelement","ɵɵtemplate","ɵɵproperty","directives","IonHeader","IonToolbar","IonButtons","IonBackButton","IonBackButtonDelegate","IonTitle","IonContent","IonCard","IonCardTitle","NgForOf","IonList","IonItem","IonLabel","styles"],"mappings":"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","sourcesContent":["import { testIssue292 } from '../utils/import-json-utils';\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nfunction Testjson292Page_ion_list_22_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\")(1, \"ion-item\")(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r1.content, \"\");\n} }\nexport class Testjson292Page {\n    constructor(_sqlite) {\n        this._sqlite = _sqlite;\n        this.inbox = [];\n        this.initPlugin = false;\n    }\n    async ngAfterViewInit() {\n        const showAlert = async (message) => {\n            await Dialog.alert({\n                title: 'Error Dialog',\n                message: message,\n            });\n        };\n        try {\n            await this.runTest();\n            document.querySelector('.sql-allsuccess').classList\n                .remove('display');\n            console.log(\"$$$ runTest was successful\");\n        }\n        catch (err) {\n            document.querySelector('.sql-allfailure').classList\n                .remove('display');\n            let msg = err.message ? err.message : err;\n            await showAlert(msg);\n            console.log(`$$$ runTest failed ${msg}`);\n        }\n    }\n    async runTest() {\n        try {\n            let result = await this._sqlite.echo(\"Hello World\");\n            // ************************************************\n            // Import Json Object Issue#292\n            // ************************************************\n            // test Full Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(testIssue292));\n            console.log(`isJsonValid ${result.result} `);\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid testIssue292 Full failed\"));\n            }\n            // full import \n            result = await this._sqlite\n                .importFromJson(JSON.stringify(testIssue292));\n            console.log(`importFromJson ${JSON.stringify(result)} `);\n            if (result.changes.changes === -1)\n                return Promise.reject(new Error(\"ImportFromJson V1 'full' failed\"));\n            console.log(`>>> Import testIssue292 changes: ${result.changes.changes}`);\n            // create the connection to the database\n            let db = await this._sqlite\n                .createConnection(\"db-issue292\", false, \"no-encryption\", 1);\n            if (db === null)\n                return Promise.reject(new Error(\"CreateConnection db-issue292 failed\"));\n            // open db db-issue292\n            await db.open();\n            // create synchronization table \n            result = await db.createSyncTable();\n            if (result.changes.changes < 0)\n                return Promise.reject(new Error(\"CreateSyncTable failed\"));\n            result = await db.getSyncDate();\n            if (result.length === 0)\n                return Promise.reject(new Error(\"GetSyncDate failed\"));\n            // select inbox in db\n            let ret = await db.query('SELECT * FROM inbox;');\n            if (ret.values.length !== 4 || ret.values[0].id !== 1 ||\n                ret.values[1].id !== 2 ||\n                ret.values[2].id !== 3 ||\n                ret.values[3].id !== 4) {\n                return Promise.reject(new Error(\"Query inbox failed\"));\n            }\n            this.inbox = [...ret.values];\n            console.log(`this.inbox \\n ${JSON.stringify(this.inbox)}`);\n            // ************************************************\n            // Export Json Object from an Existing Database\n            // ************************************************\n            // export json full\n            let jsonObj = await db.exportToJson('full');\n            // test Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(jsonObj.export));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid export 'full' failed\"));\n            }\n            console.log(`Json returned from Full Export \\n ${JSON.stringify(jsonObj.export)}`);\n            // close the connection\n            await this._sqlite.closeConnection(\"db-issue292\");\n            return Promise.resolve();\n        }\n        catch (err) {\n            // close the connection\n            const isConn = (await this._sqlite.isConnection(\"db-issue292\")).result;\n            if (isConn)\n                await this._sqlite.closeConnection(\"db-issue292\");\n            return Promise.reject(err);\n        }\n    }\n}\nTestjson292Page.ɵfac = function Testjson292Page_Factory(t) { return new (t || Testjson292Page)(i0.ɵɵdirectiveInject(i1.SQLiteService)); };\nTestjson292Page.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Testjson292Page, selectors: [[\"app-testjson292\"]], decls: 23, vars: 3, consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"], [1, \"card-inbox\"], [4, \"ngFor\", \"ngForOf\"]], template: function Testjson292Page_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestJson#292 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestJson#292\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"ion-card\", 10)(20, \"ion-card-title\");\n        i0.ɵɵtext(21, \" INBOX \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, Testjson292Page_ion_list_22_Template, 4, 1, \"ion-list\", 11);\n        i0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.inbox);\n    } }, directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonCard, i2.IonCardTitle, i3.NgForOf, i2.IonList, i2.IonItem, i2.IonLabel], styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Rqc29uMjkyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3Rqc29uMjkyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}