{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { defineCustomElements as pwaElements } from '@ionic/pwa-elements/loader';\nimport { defineCustomElements as jeepSqlite } from 'jeep-sqlite/loader';\nimport { Capacitor } from '@capacitor/core';\nimport { CapacitorSQLite, SQLiteConnection } from '@capacitor-community/sqlite';\n\nif (environment.production) {\n  enableProdMode();\n}\n\npwaElements(window);\njeepSqlite(window);\nwindow.addEventListener('DOMContentLoaded', /*#__PURE__*/_asyncToGenerator(function* () {\n  const platform = Capacitor.getPlatform();\n  const sqlite = new SQLiteConnection(CapacitorSQLite);\n\n  try {\n    if (platform === \"web\") {\n      console.log('in index.ts');\n      const jeepEl = document.createElement(\"jeep-sqlite\");\n      document.body.appendChild(jeepEl);\n      yield customElements.whenDefined('jeep-sqlite');\n      console.log('in index.ts after customElements');\n      yield sqlite.initWebStore();\n      console.log('after sqlite.initWebStore()');\n    }\n\n    yield sqlite.checkConnectionsConsistency();\n\n    __NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule).catch(err => console.log(err));\n  } catch (err) {\n    console.log(`Error: ${err}`);\n    throw new Error(`Error: ${err}`);\n  }\n}));","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/main.ts"],"names":["__NgCli_bootstrap_1","enableProdMode","AppModule","environment","defineCustomElements","pwaElements","jeepSqlite","Capacitor","CapacitorSQLite","SQLiteConnection","production","window","addEventListener","platform","getPlatform","sqlite","console","log","jeepEl","document","createElement","body","appendChild","customElements","whenDefined","initWebStore","checkConnectionsConsistency","platformBrowser","bootstrapModule","catch","err","Error"],"mappings":";AAAA,OAAO,KAAKA,mBAAZ,MAAqC,2BAArC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,oBAAoB,IAAIC,WAAjC,QAAoD,4BAApD;AACA,SAASD,oBAAoB,IAAIE,UAAjC,QAAmD,oBAAnD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,6BAAlD;;AACA,IAAIN,WAAW,CAACO,UAAhB,EAA4B;AACxBT,EAAAA,cAAc;AACjB;;AACDI,WAAW,CAACM,MAAD,CAAX;AACAL,UAAU,CAACK,MAAD,CAAV;AACAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,iCAA4C,aAAY;AACpD,QAAMC,QAAQ,GAAGN,SAAS,CAACO,WAAV,EAAjB;AACA,QAAMC,MAAM,GAAG,IAAIN,gBAAJ,CAAqBD,eAArB,CAAf;;AACA,MAAI;AACA,QAAIK,QAAQ,KAAK,KAAjB,EAAwB;AACpBG,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAf;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACA,YAAMK,cAAc,CAACC,WAAf,CAA2B,aAA3B,CAAN;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,YAAMF,MAAM,CAACU,YAAP,EAAN;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;;AACD,UAAMF,MAAM,CAACW,2BAAP,EAAN;;AACA1B,IAAAA,mBAAmB,CAAC2B,eAApB,GAAsCC,eAAtC,CAAsD1B,SAAtD,EACK2B,KADL,CACWC,GAAG,IAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CADlB;AAEH,GAbD,CAcA,OAAOA,GAAP,EAAY;AACRd,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASa,GAAI,EAA1B;AACA,UAAM,IAAIC,KAAJ,CAAW,UAASD,GAAI,EAAxB,CAAN;AACH;AACJ,CArBD","sourcesContent":["import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { defineCustomElements as pwaElements } from '@ionic/pwa-elements/loader';\nimport { defineCustomElements as jeepSqlite } from 'jeep-sqlite/loader';\nimport { Capacitor } from '@capacitor/core';\nimport { CapacitorSQLite, SQLiteConnection } from '@capacitor-community/sqlite';\nif (environment.production) {\n    enableProdMode();\n}\npwaElements(window);\njeepSqlite(window);\nwindow.addEventListener('DOMContentLoaded', async () => {\n    const platform = Capacitor.getPlatform();\n    const sqlite = new SQLiteConnection(CapacitorSQLite);\n    try {\n        if (platform === \"web\") {\n            console.log('in index.ts');\n            const jeepEl = document.createElement(\"jeep-sqlite\");\n            document.body.appendChild(jeepEl);\n            await customElements.whenDefined('jeep-sqlite');\n            console.log('in index.ts after customElements');\n            await sqlite.initWebStore();\n            console.log('after sqlite.initWebStore()');\n        }\n        await sqlite.checkConnectionsConsistency();\n        __NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule)\n            .catch(err => console.log(err));\n    }\n    catch (err) {\n        console.log(`Error: ${err}`);\n        throw new Error(`Error: ${err}`);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}