{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"../../services/detail.service\";\nimport * as i3 from \"@ionic/angular\";\nexport let TestexportjsonPage = /*#__PURE__*/(() => {\n  class TestexportjsonPage {\n    constructor(_sqlite, _detailService) {\n      this._sqlite = _sqlite;\n      this._detailService = _detailService;\n      this.initPlugin = false;\n    }\n\n    ngAfterViewInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const showAlert = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (message) {\n            yield Dialog.alert({\n              title: 'Error Dialog',\n              message: message\n            });\n          });\n\n          return function showAlert(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        try {\n          yield _this.runTest();\n          document.querySelector('.sql-allsuccess').classList.remove('display');\n          console.log(\"$$$ runTest was successful\");\n        } catch (err) {\n          document.querySelector('.sql-allfailure').classList.remove('display');\n          console.log(`$$$ runTest failed ${err.message}`);\n          yield showAlert(err.message);\n        }\n      })();\n    }\n\n    runTest() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          let result = yield _this2._sqlite.echo(\"Hello World\"); // ************************************************\n          // Export Json Object from an Existing Database\n          // ************************************************\n          // create the connection to the database\n\n          const db = yield _this2._sqlite.createConnection(\"db-from-json\", false, \"no-encryption\", 1);\n          if (db === null) return Promise.reject(new Error(\"CreateConnection db-from-json failed\")); // open db testNew\n\n          yield db.open(); // ************************************************\n          // Full Export json\n          // ************************************************\n\n          let jsonObj = yield db.exportToJson('full');\n          console.log(`jsonObj ${JSON.stringify(jsonObj.export)}`);\n          console.log(`jsonObj.export.database: ${jsonObj.export.database} `); // test Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(jsonObj.export));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid 'full' export failed \"));\n          } // ************************************************\n          // Partial Export json\n          // ************************************************\n\n\n          yield db.setSyncDate(\"2020-05-20T18:40:00.000Z\");\n          jsonObj = yield db.exportToJson('partial'); // test Json object validity\n\n          result = yield _this2._sqlite.isJsonValid(JSON.stringify(jsonObj.export));\n\n          if (!result.result) {\n            return Promise.reject(new Error(\"IsJsonValid 'partial' export failed \"));\n          }\n\n          if (jsonObj.export.tables.length != 4 || jsonObj.export.tables[0].name != 'users' || jsonObj.export.tables[1].name != 'messages' || jsonObj.export.tables[2].name != 'images' || jsonObj.export.tables[3].name != 'test113' || jsonObj.export.tables[0].values.length != 4 || jsonObj.export.tables[1].values.length != 3 || jsonObj.export.tables[2].values.length != 1 || jsonObj.export.tables[3].values.length != 2) {\n            return Promise.reject(new Error(\"IsJsonValid 'partial' export failed: No 4 tables\"));\n          } // close the connection\n\n\n          yield _this2._sqlite.closeConnection(\"db-from-json\");\n\n          _this2._detailService.setExportJson(false);\n\n          return Promise.resolve();\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      })();\n    }\n\n  }\n\n  TestexportjsonPage.ɵfac = function TestexportjsonPage_Factory(t) {\n    return new (t || TestexportjsonPage)(i0.ɵɵdirectiveInject(i1.SQLiteService), i0.ɵɵdirectiveInject(i2.DetailService));\n  };\n\n  TestexportjsonPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TestexportjsonPage,\n    selectors: [[\"app-testexportjson\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]],\n    template: function TestexportjsonPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestExportJson \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestExportJson\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonBackButton, i3.IonBackButtonDelegate, i3.IonTitle, i3.IonContent, i3.IonCard, i3.IonCardTitle],\n    styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RleHBvcnRqc29uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3RleHBvcnRqc29uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"]\n  });\n  return TestexportjsonPage;\n})();","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/testexportjson/testexportjson.page.ts"],"names":["Dialog","i0","i1","i2","i3","TestexportjsonPage","constructor","_sqlite","_detailService","initPlugin","ngAfterViewInit","showAlert","message","alert","title","runTest","document","querySelector","classList","remove","console","log","err","result","echo","db","createConnection","Promise","reject","Error","open","jsonObj","exportToJson","JSON","stringify","export","database","isJsonValid","setSyncDate","tables","length","name","values","closeConnection","setExportJson","resolve","ɵfac","TestexportjsonPage_Factory","t","ɵɵdirectiveInject","SQLiteService","DetailService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","TestexportjsonPage_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance","directives","IonHeader","IonToolbar","IonButtons","IonBackButton","IonBackButtonDelegate","IonTitle","IonContent","IonCard","IonCardTitle","styles"],"mappings":"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","sourcesContent":["import { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"../../services/detail.service\";\nimport * as i3 from \"@ionic/angular\";\nexport class TestexportjsonPage {\n    constructor(_sqlite, _detailService) {\n        this._sqlite = _sqlite;\n        this._detailService = _detailService;\n        this.initPlugin = false;\n    }\n    async ngAfterViewInit() {\n        const showAlert = async (message) => {\n            await Dialog.alert({\n                title: 'Error Dialog',\n                message: message,\n            });\n        };\n        try {\n            await this.runTest();\n            document.querySelector('.sql-allsuccess').classList\n                .remove('display');\n            console.log(\"$$$ runTest was successful\");\n        }\n        catch (err) {\n            document.querySelector('.sql-allfailure').classList\n                .remove('display');\n            console.log(`$$$ runTest failed ${err.message}`);\n            await showAlert(err.message);\n        }\n    }\n    async runTest() {\n        try {\n            let result = await this._sqlite.echo(\"Hello World\");\n            // ************************************************\n            // Export Json Object from an Existing Database\n            // ************************************************\n            // create the connection to the database\n            const db = await this._sqlite\n                .createConnection(\"db-from-json\", false, \"no-encryption\", 1);\n            if (db === null)\n                return Promise.reject(new Error(\"CreateConnection db-from-json failed\"));\n            // open db testNew\n            await db.open();\n            // ************************************************\n            // Full Export json\n            // ************************************************\n            let jsonObj = await db.exportToJson('full');\n            console.log(`jsonObj ${JSON.stringify(jsonObj.export)}`);\n            console.log(`jsonObj.export.database: ${jsonObj.export.database} `);\n            // test Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(jsonObj.export));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid 'full' export failed \"));\n            }\n            // ************************************************\n            // Partial Export json\n            // ************************************************\n            await db.setSyncDate(\"2020-05-20T18:40:00.000Z\");\n            jsonObj = await db.exportToJson('partial');\n            // test Json object validity\n            result = await this._sqlite\n                .isJsonValid(JSON.stringify(jsonObj.export));\n            if (!result.result) {\n                return Promise.reject(new Error(\"IsJsonValid 'partial' export failed \"));\n            }\n            if (jsonObj.export.tables.length != 4 || jsonObj.export.tables[0].name != 'users'\n                || jsonObj.export.tables[1].name != 'messages' || jsonObj.export.tables[2].name != 'images'\n                || jsonObj.export.tables[3].name != 'test113' || jsonObj.export.tables[0].values.length != 4\n                || jsonObj.export.tables[1].values.length != 3 || jsonObj.export.tables[2].values.length != 1\n                || jsonObj.export.tables[3].values.length != 2) {\n                return Promise.reject(new Error(\"IsJsonValid 'partial' export failed: No 4 tables\"));\n            }\n            // close the connection\n            await this._sqlite.closeConnection(\"db-from-json\");\n            this._detailService.setExportJson(false);\n            return Promise.resolve();\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n}\nTestexportjsonPage.ɵfac = function TestexportjsonPage_Factory(t) { return new (t || TestexportjsonPage)(i0.ɵɵdirectiveInject(i1.SQLiteService), i0.ɵɵdirectiveInject(i2.DetailService)); };\nTestexportjsonPage.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TestexportjsonPage, selectors: [[\"app-testexportjson\"]], decls: 19, vars: 2, consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]], template: function TestexportjsonPage_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" TestExportJson \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"TestExportJson\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 9);\n        i0.ɵɵtext(18, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n    } }, directives: [i3.IonHeader, i3.IonToolbar, i3.IonButtons, i3.IonBackButton, i3.IonBackButtonDelegate, i3.IonTitle, i3.IonContent, i3.IonCard, i3.IonCardTitle], styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RleHBvcnRqc29uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLE9BQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUlBO0VBQ0UsYUFBQTtBQURGOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUNBO0VBQ0UseUNBQUE7RUFDQSw4QkFBQTtBQUVGIiwiZmlsZSI6InRlc3RleHBvcnRqc29uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1JTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG5cbi5kaXNwbGF5IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5jYXJkLXNxbGl0ZSB7XG4gIHBhZGRpbmc6IDAgMXJlbTtcbn1cbmlvbi1jYXJkIHAge1xuICBmb250LXNpemU6IDFyZW07XG59XG5pb24tY2FyZCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWJhY2tncm91bmQtY29sb3IpO1xuICAtLWNvbG9yOiB2YXIoLS1pb24tdGV4dC1jb2xvcik7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}