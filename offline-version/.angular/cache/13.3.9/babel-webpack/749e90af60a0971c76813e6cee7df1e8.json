{"ast":null,"code":"export const createSchema = `\nCREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    name TEXT,\n    company TEXT,\n    size REAL,\n    age INTEGER,\n    sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n);\nCREATE TABLE IF NOT EXISTS messages (\n  id INTEGER PRIMARY KEY NOT NULL,\n  userid INTEGER,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now')),\n  FOREIGN KEY (userid) REFERENCES users(id) ON DELETE SET DEFAULT\n);\nCREATE TABLE IF NOT EXISTS images (\n  id INTEGER PRIMARY KEY NOT NULL,\n  name TEXT UNIQUE NOT NULL,\n  type TEXT NOT NULL,\n  size INTEGER,\n  img BLOB,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n);\nCREATE TABLE IF NOT EXISTS test56 (\n  id INTEGER PRIMARY KEY NOT NULL,\n  name TEXT,\n  name1 TEXT\n);\nCREATE INDEX IF NOT EXISTS users_index_name ON users (name);\nCREATE INDEX IF NOT EXISTS users_index_last_modified ON users (last_modified);\nCREATE INDEX IF NOT EXISTS messages_index_name ON messages (title);\nCREATE INDEX IF NOT EXISTS messages_index_last_modified ON messages (last_modified);\nCREATE INDEX IF NOT EXISTS images_index_name ON images (name);\nCREATE INDEX IF NOT EXISTS images_index_last_modified ON images (last_modified);\nCREATE TRIGGER IF NOT EXISTS users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified < OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER IF NOT EXISTS messages_trigger_last_modified\nAFTER UPDATE ON messages\nFOR EACH ROW WHEN NEW.last_modified < OLD.last_modified\nBEGIN\n    UPDATE messages SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER IF NOT EXISTS images_trigger_last_modified\nAFTER UPDATE ON images\nFOR EACH ROW WHEN NEW.last_modified < OLD.last_modified\nBEGIN\n    UPDATE images SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nPRAGMA user_version = 1;\n`; // Insert some Users\n\nconst row = [[\"Whiteley\", \"Whiteley.com\", 30.2], [\"Jones\", \"Jones.com\", 44]];\nexport const twoUsers = `\nINSERT INTO users (name,email,age) VALUES (\"${row[0][0]}\",\"${row[0][1]}\",${row[0][2]});\nINSERT INTO users (name,email,age) VALUES (\"${row[1][0]}\",\"${row[1][1]}\",${row[1][2]});\n`; // Insert some Tests issue#56\n\nexport const twoTests = `\nINSERT INTO test56 (name) VALUES (\"test 1\");\nINSERT INTO test56 (name) VALUES (\"test 2\");\n`;\nexport const setUsers = [{\n  statement: \"INSERT INTO users (name,email,company,size,age) VALUES (?,?,?,?,?);\",\n  values: [\"Jackson\", \"Jackson@example.com\", null, null, 18]\n}, {\n  statement: \"INSERT INTO users (name,email,age) VALUES (?,?,?);\",\n  values: [\"Kennedy\", \"Kennedy@example.com\", 25]\n}, {\n  statement: \"INSERT INTO users (name,email,company,size,age) VALUES (?,?,?,?,?);\",\n  values: [\"Bush\", \"Bush@example.com\", null, null, null]\n}];\nexport const createSchema82 = `\nCREATE TABLE IF NOT EXISTS drawings (\n  id TEXT PRIMARY KEY NOT NULL,\n  congregationId TEXT,\n  prefix TEXT,\n  creationTime TEXT NOT NULL,\n  lastUpdated TEXT,\n  featureCollection TEXT NOT NULL,\n  printConfiguration TEXT\n);\nPRAGMA drawings_version = 1;\n`;\nexport const createSchemaIssue230 = `CREATE TABLE IF NOT EXISTS DemoTable (name TEXT,score INTEGER);`;","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/utils/no-encryption-utils.ts"],"names":["createSchema","row","twoUsers","twoTests","setUsers","statement","values","createSchema82","createSchemaIssue230"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3DO,C,CA4DP;;AACA,MAAMC,GAAG,GAAG,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,IAA7B,CAAD,EAAqC,CAAC,OAAD,EAAU,WAAV,EAAuB,EAAvB,CAArC,CAAZ;AACA,OAAO,MAAMC,QAAQ,GAAI;AACzB,8CAA8CD,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,MAAKA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,KAAIA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU;AACrF,8CAA8CA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,MAAKA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU,KAAIA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAU;AACrF,CAHO,C,CAIP;;AACA,OAAO,MAAME,QAAQ,GAAI;AACzB;AACA;AACA,CAHO;AAIP,OAAO,MAAMC,QAAQ,GAAG,CACpB;AAAEC,EAAAA,SAAS,EAAE,qEAAb;AACIC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,qBAAZ,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,EAA/C;AADZ,CADoB,EAIpB;AAAED,EAAAA,SAAS,EAAE,oDAAb;AACIC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,qBAAZ,EAAmC,EAAnC;AADZ,CAJoB,EAOpB;AAAED,EAAAA,SAAS,EAAE,qEAAb;AACIC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,kBAAT,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,IAAzC;AADZ,CAPoB,CAAjB;AAWP,OAAO,MAAMC,cAAc,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAYP,OAAO,MAAMC,oBAAoB,GAAI,iEAA9B","sourcesContent":["export const createSchema = `\nCREATE TABLE IF NOT EXISTS users (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email TEXT UNIQUE NOT NULL,\n    name TEXT,\n    company TEXT,\n    size REAL,\n    age INTEGER,\n    sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n);\nCREATE TABLE IF NOT EXISTS messages (\n  id INTEGER PRIMARY KEY NOT NULL,\n  userid INTEGER,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now')),\n  FOREIGN KEY (userid) REFERENCES users(id) ON DELETE SET DEFAULT\n);\nCREATE TABLE IF NOT EXISTS images (\n  id INTEGER PRIMARY KEY NOT NULL,\n  name TEXT UNIQUE NOT NULL,\n  type TEXT NOT NULL,\n  size INTEGER,\n  img BLOB,\n  sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n  last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n);\nCREATE TABLE IF NOT EXISTS test56 (\n  id INTEGER PRIMARY KEY NOT NULL,\n  name TEXT,\n  name1 TEXT\n);\nCREATE INDEX IF NOT EXISTS users_index_name ON users (name);\nCREATE INDEX IF NOT EXISTS users_index_last_modified ON users (last_modified);\nCREATE INDEX IF NOT EXISTS messages_index_name ON messages (title);\nCREATE INDEX IF NOT EXISTS messages_index_last_modified ON messages (last_modified);\nCREATE INDEX IF NOT EXISTS images_index_name ON images (name);\nCREATE INDEX IF NOT EXISTS images_index_last_modified ON images (last_modified);\nCREATE TRIGGER IF NOT EXISTS users_trigger_last_modified\nAFTER UPDATE ON users\nFOR EACH ROW WHEN NEW.last_modified < OLD.last_modified\nBEGIN\n    UPDATE users SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER IF NOT EXISTS messages_trigger_last_modified\nAFTER UPDATE ON messages\nFOR EACH ROW WHEN NEW.last_modified < OLD.last_modified\nBEGIN\n    UPDATE messages SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nCREATE TRIGGER IF NOT EXISTS images_trigger_last_modified\nAFTER UPDATE ON images\nFOR EACH ROW WHEN NEW.last_modified < OLD.last_modified\nBEGIN\n    UPDATE images SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\nPRAGMA user_version = 1;\n`;\n// Insert some Users\nconst row = [[\"Whiteley\", \"Whiteley.com\", 30.2], [\"Jones\", \"Jones.com\", 44]];\nexport const twoUsers = `\nINSERT INTO users (name,email,age) VALUES (\"${row[0][0]}\",\"${row[0][1]}\",${row[0][2]});\nINSERT INTO users (name,email,age) VALUES (\"${row[1][0]}\",\"${row[1][1]}\",${row[1][2]});\n`;\n// Insert some Tests issue#56\nexport const twoTests = `\nINSERT INTO test56 (name) VALUES (\"test 1\");\nINSERT INTO test56 (name) VALUES (\"test 2\");\n`;\nexport const setUsers = [\n    { statement: \"INSERT INTO users (name,email,company,size,age) VALUES (?,?,?,?,?);\",\n        values: [\"Jackson\", \"Jackson@example.com\", null, null, 18]\n    },\n    { statement: \"INSERT INTO users (name,email,age) VALUES (?,?,?);\",\n        values: [\"Kennedy\", \"Kennedy@example.com\", 25]\n    },\n    { statement: \"INSERT INTO users (name,email,company,size,age) VALUES (?,?,?,?,?);\",\n        values: [\"Bush\", \"Bush@example.com\", null, null, null]\n    },\n];\nexport const createSchema82 = `\nCREATE TABLE IF NOT EXISTS drawings (\n  id TEXT PRIMARY KEY NOT NULL,\n  congregationId TEXT,\n  prefix TEXT,\n  creationTime TEXT NOT NULL,\n  lastUpdated TEXT,\n  featureCollection TEXT NOT NULL,\n  printConfiguration TEXT\n);\nPRAGMA drawings_version = 1;\n`;\nexport const createSchemaIssue230 = `CREATE TABLE IF NOT EXISTS DemoTable (name TEXT,score INTEGER);`;\n"]},"metadata":{},"sourceType":"module"}