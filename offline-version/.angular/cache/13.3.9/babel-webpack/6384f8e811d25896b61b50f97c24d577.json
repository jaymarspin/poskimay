{"ast":null,"code":"import { checkAvailability } from './decorators/common';\nimport { get } from './util';\n\nvar AwesomeCordovaNativePlugin =\n/** @class */\nfunction () {\n  function AwesomeCordovaNativePlugin() {}\n  /**\n   * Returns a boolean that indicates whether the plugin is installed\n   *\n   * @returns {boolean}\n   */\n\n\n  AwesomeCordovaNativePlugin.installed = function () {\n    var isAvailable = checkAvailability(this.pluginRef) === true;\n    return isAvailable;\n  };\n  /**\n   * Returns the original plugin object\n   */\n\n\n  AwesomeCordovaNativePlugin.getPlugin = function () {\n    if (typeof window !== 'undefined') {\n      return get(window, this.pluginRef);\n    }\n\n    return null;\n  };\n  /**\n   * Returns the plugin's name\n   */\n\n\n  AwesomeCordovaNativePlugin.getPluginName = function () {\n    var pluginName = this.pluginName;\n    return pluginName;\n  };\n  /**\n   * Returns the plugin's reference\n   */\n\n\n  AwesomeCordovaNativePlugin.getPluginRef = function () {\n    var pluginRef = this.pluginRef;\n    return pluginRef;\n  };\n  /**\n   * Returns the plugin's install name\n   */\n\n\n  AwesomeCordovaNativePlugin.getPluginInstallName = function () {\n    var plugin = this.plugin;\n    return plugin;\n  };\n  /**\n   * Returns the plugin's supported platforms\n   */\n\n\n  AwesomeCordovaNativePlugin.getSupportedPlatforms = function () {\n    var platform = this.platforms;\n    return platform;\n  };\n\n  AwesomeCordovaNativePlugin.pluginName = '';\n  AwesomeCordovaNativePlugin.pluginRef = '';\n  AwesomeCordovaNativePlugin.plugin = '';\n  AwesomeCordovaNativePlugin.repo = '';\n  AwesomeCordovaNativePlugin.platforms = [];\n  AwesomeCordovaNativePlugin.install = '';\n  return AwesomeCordovaNativePlugin;\n}();\n\nexport { AwesomeCordovaNativePlugin };","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@awesome-cordova-plugins/core/__ivy_ngcc__/awesome-cordova-plugin.js"],"names":["checkAvailability","get","AwesomeCordovaNativePlugin","installed","isAvailable","pluginRef","getPlugin","window","getPluginName","pluginName","getPluginRef","getPluginInstallName","plugin","getSupportedPlatforms","platform","platforms","repo","install"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,GAAT,QAAoB,QAApB;;AACA,IAAIC,0BAA0B;AAAG;AAAe,YAAY;AACxD,WAASA,0BAAT,GAAsC,CACrC;AACD;AACJ;AACA;AACA;AACA;;;AACIA,EAAAA,0BAA0B,CAACC,SAA3B,GAAuC,YAAY;AAC/C,QAAIC,WAAW,GAAGJ,iBAAiB,CAAC,KAAKK,SAAN,CAAjB,KAAsC,IAAxD;AACA,WAAOD,WAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIF,EAAAA,0BAA0B,CAACI,SAA3B,GAAuC,YAAY;AAC/C,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,aAAON,GAAG,CAACM,MAAD,EAAS,KAAKF,SAAd,CAAV;AACH;;AACD,WAAO,IAAP;AACH,GALD;AAMA;AACJ;AACA;;;AACIH,EAAAA,0BAA0B,CAACM,aAA3B,GAA2C,YAAY;AACnD,QAAIC,UAAU,GAAG,KAAKA,UAAtB;AACA,WAAOA,UAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIP,EAAAA,0BAA0B,CAACQ,YAA3B,GAA0C,YAAY;AAClD,QAAIL,SAAS,GAAG,KAAKA,SAArB;AACA,WAAOA,SAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIH,EAAAA,0BAA0B,CAACS,oBAA3B,GAAkD,YAAY;AAC1D,QAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,WAAOA,MAAP;AACH,GAHD;AAIA;AACJ;AACA;;;AACIV,EAAAA,0BAA0B,CAACW,qBAA3B,GAAmD,YAAY;AAC3D,QAAIC,QAAQ,GAAG,KAAKC,SAApB;AACA,WAAOD,QAAP;AACH,GAHD;;AAIAZ,EAAAA,0BAA0B,CAACO,UAA3B,GAAwC,EAAxC;AACAP,EAAAA,0BAA0B,CAACG,SAA3B,GAAuC,EAAvC;AACAH,EAAAA,0BAA0B,CAACU,MAA3B,GAAoC,EAApC;AACAV,EAAAA,0BAA0B,CAACc,IAA3B,GAAkC,EAAlC;AACAd,EAAAA,0BAA0B,CAACa,SAA3B,GAAuC,EAAvC;AACAb,EAAAA,0BAA0B,CAACe,OAA3B,GAAqC,EAArC;AACA,SAAOf,0BAAP;AACH,CAxD+C,EAAhD;;AAyDA,SAASA,0BAAT","sourcesContent":["import { checkAvailability } from './decorators/common';\nimport { get } from './util';\nvar AwesomeCordovaNativePlugin = /** @class */ (function () {\n    function AwesomeCordovaNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     *\n     * @returns {boolean}\n     */\n    AwesomeCordovaNativePlugin.installed = function () {\n        var isAvailable = checkAvailability(this.pluginRef) === true;\n        return isAvailable;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    AwesomeCordovaNativePlugin.getPlugin = function () {\n        if (typeof window !== 'undefined') {\n            return get(window, this.pluginRef);\n        }\n        return null;\n    };\n    /**\n     * Returns the plugin's name\n     */\n    AwesomeCordovaNativePlugin.getPluginName = function () {\n        var pluginName = this.pluginName;\n        return pluginName;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    AwesomeCordovaNativePlugin.getPluginRef = function () {\n        var pluginRef = this.pluginRef;\n        return pluginRef;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    AwesomeCordovaNativePlugin.getPluginInstallName = function () {\n        var plugin = this.plugin;\n        return plugin;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    AwesomeCordovaNativePlugin.getSupportedPlatforms = function () {\n        var platform = this.platforms;\n        return platform;\n    };\n    AwesomeCordovaNativePlugin.pluginName = '';\n    AwesomeCordovaNativePlugin.pluginRef = '';\n    AwesomeCordovaNativePlugin.plugin = '';\n    AwesomeCordovaNativePlugin.repo = '';\n    AwesomeCordovaNativePlugin.platforms = [];\n    AwesomeCordovaNativePlugin.install = '';\n    return AwesomeCordovaNativePlugin;\n}());\nexport { AwesomeCordovaNativePlugin };\n"]},"metadata":{},"sourceType":"module"}