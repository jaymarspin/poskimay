{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Directory, Filesystem } from '@capacitor/filesystem';\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"@ionic/angular\";\nexport let DownloadToCacheAndMove = /*#__PURE__*/(() => {\n  class DownloadToCacheAndMove {\n    constructor(_sqlite) {\n      this._sqlite = _sqlite;\n      this.log = \"\";\n      this.initPlugin = false;\n      this.platform = this._sqlite.platform;\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const showAlert = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (message) {\n            yield Dialog.alert({\n              title: 'Error Dialog',\n              message: message\n            });\n          });\n\n          return function showAlert(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        try {\n          yield _this.runTest();\n          document.querySelector('.sql-allsuccess').classList.remove('display');\n          console.log(\"$$$ runTest was successful\");\n        } catch (err) {\n          document.querySelector('.sql-allfailure').classList.remove('display');\n          console.log(`$$$ runTest failed ${err.message}`);\n          yield showAlert(err.message);\n        }\n      })();\n    }\n\n    runTest() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.log += \"* Starting testDownloadToCacheAndMove *\\n\";\n        let response = yield fetch(\"https://raw.githack.com/jepiqueau/angular-sqlite-app-starter/26ca67486713fc9b6ea4a37a889f0fd189c18926/src/assets/databases/dbForCopy.db\");\n        _this2.log += \"  > fetched 'dbForCopy' from github\\n\";\n        let dbBlob = yield response.blob();\n        let base64Db = yield _this2.getBlobAsBase64(dbBlob);\n        _this2.log += \"  > converted 'dbForCopy' to base64\\n\";\n        yield Filesystem.writeFile({\n          data: base64Db,\n          path: \"dbForCopyCache.db\",\n          directory: Directory.Cache\n        });\n        _this2.log += \"  > saved 'dbForCopyCache.db' in cache folder\\n\";\n        yield _this2._sqlite.moveDatabasesAndAddSuffix(\"cache\");\n        _this2.log += \"  > moved 'dbForCopyCache' to databases folder\\n\";\n        let db = yield _this2._sqlite.createConnection(\"dbForCopyCache\", false, \"no-encryption\", 1);\n        if (db == null) throw new Error(\"createConnection dbForCopyCache failed\");\n        yield db.open();\n        _this2.log += \"  > open 'dbForCopyCache' successful\\n\";\n        let res = yield db.query(\"SELECT * FROM areas\");\n\n        if (res.values.length !== 3 || res.values[0].name !== \"Access road\" || res.values[1].name !== \"Accessway\" || res.values[2].name !== \"Air handling system\") {\n          throw new Error(\"Query 3 areas failed\");\n        }\n\n        _this2.log += \"  > query 'dbForCopyCache' successful\\n\";\n        yield _this2._sqlite.closeConnection(\"dbForCopyCache\");\n        _this2.log += \"  > closeConnection 'dbForCopyCache' successful\\n\";\n      })();\n    }\n\n    getBlobAsBase64(blob) {\n      return new Promise((resolve, _) => {\n        let reader = new FileReader();\n\n        reader.onload = event => {\n          resolve(event.target.result);\n        };\n\n        reader.readAsDataURL(blob);\n      });\n    }\n\n  }\n\n  DownloadToCacheAndMove.ɵfac = function DownloadToCacheAndMove_Factory(t) {\n    return new (t || DownloadToCacheAndMove)(i0.ɵɵdirectiveInject(i1.SQLiteService));\n  };\n\n  DownloadToCacheAndMove.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DownloadToCacheAndMove,\n    selectors: [[\"app-downloadtocacheandmove\"]],\n    decls: 25,\n    vars: 3,\n    consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]],\n    template: function DownloadToCacheAndMove_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" Download to cache and move \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"Download to cache and move\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-card-content\")(16, \"pre\");\n        i0.ɵɵtext(17, \"          \");\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 8);\n        i0.ɵɵtext(22, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\", 9);\n        i0.ɵɵtext(24, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonCard, i2.IonCardTitle, i2.IonCardContent],\n    styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n\\nion-card-content[_ngcontent-%COMP%] {\\n  text-align: left;\\n  position: relative;\\n  left: 2px;\\n  right: 2px;\\n  top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvd25sb2FkdG9jYWNoZWFuZG1vdmUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FBQUY7O0FBSUE7RUFDRSxhQUFBO0FBREY7O0FBR0E7RUFDRSxlQUFBO0FBQUY7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBQ0E7RUFDRSx5Q0FBQTtFQUNBLDhCQUFBO0FBRUY7O0FBQUE7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0FBR0YiLCJmaWxlIjoiZG93bmxvYWR0b2NhY2hlYW5kbW92ZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogNSU7XG59XG5cbiNjb250YWluZXIgc3Ryb25nIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBsaW5lLWhlaWdodDogMjZweDtcbn1cblxuXG4uZGlzcGxheSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2FyZC1zcWxpdGUge1xuICBwYWRkaW5nOiAwIDFyZW07XG59XG5pb24tY2FyZCBwIHtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuaW9uLWNhcmQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgLS1jb2xvcjogdmFyKC0taW9uLXRleHQtY29sb3IpO1xufVxuaW9uLWNhcmQtY29udGVudCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMnB4O1xuICByaWdodDogMnB4O1xuICB0b3A6IDEwcHg7XG59XG4iXX0= */\"]\n  });\n  return DownloadToCacheAndMove;\n})();","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/downloadtocacheandmove/downloadtocacheandmove.page.ts"],"names":["Directory","Filesystem","Dialog","i0","i1","i2","DownloadToCacheAndMove","constructor","_sqlite","log","initPlugin","platform","ngOnInit","showAlert","message","alert","title","runTest","document","querySelector","classList","remove","console","err","response","fetch","dbBlob","blob","base64Db","getBlobAsBase64","writeFile","data","path","directory","Cache","moveDatabasesAndAddSuffix","db","createConnection","Error","open","res","query","values","length","name","closeConnection","Promise","resolve","_","reader","FileReader","onload","event","target","result","readAsDataURL","ɵfac","DownloadToCacheAndMove_Factory","t","ɵɵdirectiveInject","SQLiteService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","DownloadToCacheAndMove_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","directives","IonHeader","IonToolbar","IonButtons","IonBackButton","IonBackButtonDelegate","IonTitle","IonContent","IonCard","IonCardTitle","IonCardContent","styles"],"mappings":"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","sourcesContent":["import { Directory, Filesystem } from '@capacitor/filesystem';\nimport { Dialog } from '@capacitor/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sqlite.service\";\nimport * as i2 from \"@ionic/angular\";\nexport class DownloadToCacheAndMove {\n    constructor(_sqlite) {\n        this._sqlite = _sqlite;\n        this.log = \"\";\n        this.initPlugin = false;\n        this.platform = this._sqlite.platform;\n    }\n    async ngOnInit() {\n        const showAlert = async (message) => {\n            await Dialog.alert({\n                title: 'Error Dialog',\n                message: message,\n            });\n        };\n        try {\n            await this.runTest();\n            document.querySelector('.sql-allsuccess').classList\n                .remove('display');\n            console.log(\"$$$ runTest was successful\");\n        }\n        catch (err) {\n            document.querySelector('.sql-allfailure').classList\n                .remove('display');\n            console.log(`$$$ runTest failed ${err.message}`);\n            await showAlert(err.message);\n        }\n    }\n    async runTest() {\n        this.log += \"* Starting testDownloadToCacheAndMove *\\n\";\n        let response = await fetch(\"https://raw.githack.com/jepiqueau/angular-sqlite-app-starter/26ca67486713fc9b6ea4a37a889f0fd189c18926/src/assets/databases/dbForCopy.db\");\n        this.log += \"  > fetched 'dbForCopy' from github\\n\";\n        let dbBlob = await response.blob();\n        let base64Db = await this.getBlobAsBase64(dbBlob);\n        this.log += \"  > converted 'dbForCopy' to base64\\n\";\n        await Filesystem.writeFile({ data: base64Db, path: \"dbForCopyCache.db\", directory: Directory.Cache });\n        this.log += \"  > saved 'dbForCopyCache.db' in cache folder\\n\";\n        await this._sqlite.moveDatabasesAndAddSuffix(\"cache\");\n        this.log += \"  > moved 'dbForCopyCache' to databases folder\\n\";\n        let db = await this._sqlite.createConnection(\"dbForCopyCache\", false, \"no-encryption\", 1);\n        if (db == null)\n            throw new Error(\"createConnection dbForCopyCache failed\");\n        await db.open();\n        this.log += \"  > open 'dbForCopyCache' successful\\n\";\n        let res = await db.query(\"SELECT * FROM areas\");\n        if (res.values.length !== 3 ||\n            res.values[0].name !== \"Access road\" ||\n            res.values[1].name !== \"Accessway\" ||\n            res.values[2].name !== \"Air handling system\") {\n            throw new Error(\"Query 3 areas failed\");\n        }\n        this.log += \"  > query 'dbForCopyCache' successful\\n\";\n        await this._sqlite.closeConnection(\"dbForCopyCache\");\n        this.log += \"  > closeConnection 'dbForCopyCache' successful\\n\";\n    }\n    getBlobAsBase64(blob) {\n        return new Promise((resolve, _) => {\n            let reader = new FileReader();\n            reader.onload = (event) => {\n                resolve(event.target.result);\n            };\n            reader.readAsDataURL(blob);\n        });\n    }\n}\nDownloadToCacheAndMove.ɵfac = function DownloadToCacheAndMove_Factory(t) { return new (t || DownloadToCacheAndMove)(i0.ɵɵdirectiveInject(i1.SQLiteService)); };\nDownloadToCacheAndMove.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DownloadToCacheAndMove, selectors: [[\"app-downloadtocacheandmove\"]], decls: 25, vars: 3, consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [1, \"card-sqlite\"], [1, \"sql-allsuccess\", \"display\"], [1, \"sql-allfailure\", \"display\"]], template: function DownloadToCacheAndMove_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n        i0.ɵɵelement(3, \"ion-back-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" Download to cache and move \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-header\", 4)(8, \"ion-toolbar\")(9, \"ion-title\", 5);\n        i0.ɵɵtext(10, \"Download to cache and move\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"ion-card\", 7)(13, \"ion-card-title\");\n        i0.ɵɵtext(14, \" Results of refactor sqlite test \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-card-content\")(16, \"pre\");\n        i0.ɵɵtext(17, \"          \");\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n        \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 8);\n        i0.ɵɵtext(22, \" The set of tests was successful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\", 9);\n        i0.ɵɵtext(24, \" The set of tests failed \");\n        i0.ɵɵelementEnd()()()()();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate(ctx.log);\n    } }, directives: [i2.IonHeader, i2.IonToolbar, i2.IonButtons, i2.IonBackButton, i2.IonBackButtonDelegate, i2.IonTitle, i2.IonContent, i2.IonCard, i2.IonCardTitle, i2.IonCardContent], styles: [\"#container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  top: 5%;\\n}\\n\\n#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.card-sqlite[_ngcontent-%COMP%] {\\n  padding: 0 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n}\\n\\nion-card[_ngcontent-%COMP%] {\\n  --background: var(--ion-background-color);\\n  --color: var(--ion-text-color);\\n}\\n\\nion-card-content[_ngcontent-%COMP%] {\\n  text-align: left;\\n  position: relative;\\n  left: 2px;\\n  right: 2px;\\n  top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvd25sb2FkdG9jYWNoZWFuZG1vdmUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FBQUY7O0FBSUE7RUFDRSxhQUFBO0FBREY7O0FBR0E7RUFDRSxlQUFBO0FBQUY7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBQ0E7RUFDRSx5Q0FBQTtFQUNBLDhCQUFBO0FBRUY7O0FBQUE7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0FBR0YiLCJmaWxlIjoiZG93bmxvYWR0b2NhY2hlYW5kbW92ZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogNSU7XG59XG5cbiNjb250YWluZXIgc3Ryb25nIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBsaW5lLWhlaWdodDogMjZweDtcbn1cblxuXG4uZGlzcGxheSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uY2FyZC1zcWxpdGUge1xuICBwYWRkaW5nOiAwIDFyZW07XG59XG5pb24tY2FyZCBwIHtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuaW9uLWNhcmQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgLS1jb2xvcjogdmFyKC0taW9uLXRleHQtY29sb3IpO1xufVxuaW9uLWNhcmQtY29udGVudCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMnB4O1xuICByaWdodDogMnB4O1xuICB0b3A6IDEwcHg7XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}