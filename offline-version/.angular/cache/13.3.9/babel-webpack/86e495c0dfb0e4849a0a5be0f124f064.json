{"ast":null,"code":"export const createSchema = `\nCREATE TABLE IF NOT EXISTS teachers (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    name VARCHAR(50),\n    office TEXT,\n    size DOUBLE,\n    age INT,\n    phone DECIMAL(11,0),\n    birth_date DATE,\n    sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n  );\nCREATE INDEX IF NOT EXISTS teachers_index_email ON teachers (email);\nCREATE INDEX IF NOT EXISTS teachers_index_last_modified ON teachers (last_modified);\nCREATE TRIGGER IF NOT EXISTS teachers_trigger_last_modified\nAFTER UPDATE ON teachers\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE teachers SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\n`;\nexport const firstTeachers = `\nDELETE FROM teachers;\nINSERT INTO teachers (name,email,office,size,age,phone,birth_date) VALUES (\"Brown\",\"stevebrown@example.com\",null,null,null,33601234567,\"1980-03-20\");\nINSERT INTO teachers (name,email,office,size,age,phone,birth_date) VALUES (\"Dupont\",\"micheldupont@example.com\",null,null,null,33901234567,\"1998-04-12\");\n`;\nexport const partialImport = {\n  database: \"testTypes\",\n  version: 1,\n  encrypted: false,\n  mode: \"partial\",\n  tables: [{\n    name: \"teachers\",\n    values: [[3, \"stevemclaren.com\", \"MacLaren\", null, null, null, 44905671234, \"1974-07-20\", 0, 1618634218], [4, \"alexanderbannister.com\", \"Bannister\", \"CDK\", null, 21, 44601234567, \"2000-07-20\", 0, 1618644218], [5, \"brianjones@example.com\", \"Jones\", \"ZWK\", null, 42, 31671434567, \"1979-02-03\", 0, 1618654218]]\n  }, {\n    name: \"classes\",\n    schema: [{\n      column: \"id\",\n      value: \"INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE\"\n    }, {\n      column: \"courseCode\",\n      value: \"INTEGER NOT NULL\"\n    }, {\n      column: \"dayOfWeek\",\n      value: \"VARCHAR(10) NOT NULL\"\n    }, {\n      column: \"timeStart\",\n      value: \"FLOAT\"\n    }, {\n      column: \"timeEnd\",\n      value: \"FLOAT\"\n    }, {\n      column: \"teacherId\",\n      value: \"INTEGER\"\n    }, {\n      column: 'sql_deleted',\n      value: 'BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1))'\n    }, {\n      column: 'last_modified',\n      value: 'INTEGER DEFAULT (strftime(\\'%s\\', \\'now\\'))'\n    }, {\n      foreignkey: \"teacherId\",\n      value: \"REFERENCES teachers(id) ON DELETE CASCADE\"\n    }],\n    indexes: [{\n      name: \"index_classes_on_courseCode\",\n      value: \"courseCode\"\n    }, {\n      name: \"index_classes_on_last_modified\",\n      value: \"last_modified DESC\"\n    }],\n    triggers: [{\n      name: \"classes_trigger_last_modified\",\n      timeevent: \"AFTER UPDATE\",\n      logic: \"FOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified BEGIN UPDATE images SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;END;\"\n    }],\n    values: [[1, 1, \"Monday\", 8.30, 10.00, 1, 0, 1618634218], [2, 2, \"Wednesday\", 14.00, 15.00, 2, 0, 1618634218], [3, 1, \"Friday\", 10.00, 12.00, 1, 0, 1618634218]]\n  }]\n};\n/*\n*/","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/src/app/test/utils/types-test-utils.ts"],"names":["createSchema","firstTeachers","partialImport","database","version","encrypted","mode","tables","name","values","schema","column","value","foreignkey","indexes","triggers","timeevent","logic"],"mappings":"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","sourcesContent":["export const createSchema = `\nCREATE TABLE IF NOT EXISTS teachers (\n    id INTEGER PRIMARY KEY NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    name VARCHAR(50),\n    office TEXT,\n    size DOUBLE,\n    age INT,\n    phone DECIMAL(11,0),\n    birth_date DATE,\n    sql_deleted BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1)),\n    last_modified INTEGER DEFAULT (strftime('%s', 'now'))\n  );\nCREATE INDEX IF NOT EXISTS teachers_index_email ON teachers (email);\nCREATE INDEX IF NOT EXISTS teachers_index_last_modified ON teachers (last_modified);\nCREATE TRIGGER IF NOT EXISTS teachers_trigger_last_modified\nAFTER UPDATE ON teachers\nFOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified\nBEGIN\n    UPDATE teachers SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;\nEND;\n`;\nexport const firstTeachers = `\nDELETE FROM teachers;\nINSERT INTO teachers (name,email,office,size,age,phone,birth_date) VALUES (\"Brown\",\"stevebrown@example.com\",null,null,null,33601234567,\"1980-03-20\");\nINSERT INTO teachers (name,email,office,size,age,phone,birth_date) VALUES (\"Dupont\",\"micheldupont@example.com\",null,null,null,33901234567,\"1998-04-12\");\n`;\nexport const partialImport = {\n    database: \"testTypes\",\n    version: 1,\n    encrypted: false,\n    mode: \"partial\",\n    tables: [\n        {\n            name: \"teachers\",\n            values: [\n                [3, \"stevemclaren.com\", \"MacLaren\", null, null, null, 44905671234, \"1974-07-20\", 0, 1618634218],\n                [4, \"alexanderbannister.com\", \"Bannister\", \"CDK\", null, 21, 44601234567, \"2000-07-20\", 0, 1618644218],\n                [5, \"brianjones@example.com\", \"Jones\", \"ZWK\", null, 42, 31671434567, \"1979-02-03\", 0, 1618654218]\n            ]\n        },\n        {\n            name: \"classes\",\n            schema: [\n                { column: \"id\", value: \"INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE\" },\n                { column: \"courseCode\", value: \"INTEGER NOT NULL\" },\n                { column: \"dayOfWeek\", value: \"VARCHAR(10) NOT NULL\" },\n                { column: \"timeStart\", value: \"FLOAT\" },\n                { column: \"timeEnd\", value: \"FLOAT\" },\n                { column: \"teacherId\", value: \"INTEGER\" },\n                { column: 'sql_deleted', value: 'BOOLEAN DEFAULT 0 CHECK (sql_deleted IN (0, 1))' },\n                { column: 'last_modified', value: 'INTEGER DEFAULT (strftime(\\'%s\\', \\'now\\'))' },\n                { foreignkey: \"teacherId\", value: \"REFERENCES teachers(id) ON DELETE CASCADE\" }\n            ],\n            indexes: [\n                { name: \"index_classes_on_courseCode\", value: \"courseCode\" },\n                { name: \"index_classes_on_last_modified\", value: \"last_modified DESC\" }\n            ],\n            triggers: [\n                {\n                    name: \"classes_trigger_last_modified\",\n                    timeevent: \"AFTER UPDATE\",\n                    logic: \"FOR EACH ROW WHEN NEW.last_modified <= OLD.last_modified BEGIN UPDATE images SET last_modified= (strftime('%s', 'now')) WHERE id=OLD.id;END;\"\n                }\n            ],\n            values: [\n                [1, 1, \"Monday\", 8.30, 10.00, 1, 0, 1618634218],\n                [2, 2, \"Wednesday\", 14.00, 15.00, 2, 0, 1618634218],\n                [3, 1, \"Friday\", 10.00, 12.00, 1, 0, 1618634218],\n            ]\n        }\n    ]\n};\n/*\n*/ \n"]},"metadata":{},"sourceType":"module"}