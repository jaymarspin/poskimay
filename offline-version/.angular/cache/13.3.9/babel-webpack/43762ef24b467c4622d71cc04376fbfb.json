{"ast":null,"code":"import _asyncToGenerator from \"/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class CapacitorSQLiteWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.jeepSqliteElement = null;\n    this.isWebStoreOpen = false;\n  }\n\n  initWebStore() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield customElements.whenDefined('jeep-sqlite');\n      _this.jeepSqliteElement = document.querySelector('jeep-sqlite');\n\n      _this.ensureJeepSqliteIsAvailable();\n\n      _this.jeepSqliteElement.addEventListener('jeepSqliteImportProgress', event => {\n        _this.notifyListeners('sqliteImportProgressEvent', event.detail);\n      });\n\n      _this.jeepSqliteElement.addEventListener('jeepSqliteExportProgress', event => {\n        _this.notifyListeners('sqliteExportProgressEvent', event.detail);\n      });\n\n      if (!_this.isWebStoreOpen) {\n        _this.isWebStoreOpen = yield _this.jeepSqliteElement.isStoreOpen();\n      }\n\n      return;\n    })();\n  }\n\n  saveToStore(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.ensureJeepSqliteIsAvailable();\n\n      _this2.ensureWebstoreIsOpen();\n\n      try {\n        yield _this2.jeepSqliteElement.saveToStore(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  echo(options) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.ensureJeepSqliteIsAvailable();\n\n      const echoResult = yield _this3.jeepSqliteElement.echo(options);\n      return echoResult;\n    })();\n  }\n\n  createConnection(options) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.ensureJeepSqliteIsAvailable();\n\n      _this4.ensureWebstoreIsOpen();\n\n      try {\n        yield _this4.jeepSqliteElement.createConnection(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  open(options) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.ensureJeepSqliteIsAvailable();\n\n      _this5.ensureWebstoreIsOpen();\n\n      try {\n        yield _this5.jeepSqliteElement.open(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  closeConnection(options) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.ensureJeepSqliteIsAvailable();\n\n      _this6.ensureWebstoreIsOpen();\n\n      try {\n        yield _this6.jeepSqliteElement.closeConnection(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  getVersion(options) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.ensureJeepSqliteIsAvailable();\n\n      _this7.ensureWebstoreIsOpen();\n\n      try {\n        const versionResult = yield _this7.jeepSqliteElement.getVersion(options);\n        return versionResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  checkConnectionsConsistency(options) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.ensureJeepSqliteIsAvailable();\n\n      try {\n        const consistencyResult = yield _this8.jeepSqliteElement.checkConnectionsConsistency(options);\n        return consistencyResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  close(options) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      _this9.ensureJeepSqliteIsAvailable();\n\n      _this9.ensureWebstoreIsOpen();\n\n      try {\n        yield _this9.jeepSqliteElement.close(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  getTableList(options) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      _this10.ensureJeepSqliteIsAvailable();\n\n      _this10.ensureWebstoreIsOpen();\n\n      try {\n        const tableListResult = yield _this10.jeepSqliteElement.getTableList(options);\n        return tableListResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  execute(options) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      _this11.ensureJeepSqliteIsAvailable();\n\n      _this11.ensureWebstoreIsOpen();\n\n      try {\n        const executeResult = yield _this11.jeepSqliteElement.execute(options);\n        return executeResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  executeSet(options) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      _this12.ensureJeepSqliteIsAvailable();\n\n      _this12.ensureWebstoreIsOpen();\n\n      try {\n        const executeResult = yield _this12.jeepSqliteElement.executeSet(options);\n        return executeResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  run(options) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      _this13.ensureJeepSqliteIsAvailable();\n\n      _this13.ensureWebstoreIsOpen();\n\n      try {\n        const runResult = yield _this13.jeepSqliteElement.run(options);\n        return runResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  query(options) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      _this14.ensureJeepSqliteIsAvailable();\n\n      _this14.ensureWebstoreIsOpen();\n\n      try {\n        const queryResult = yield _this14.jeepSqliteElement.query(options);\n        return queryResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  isDBExists(options) {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      _this15.ensureJeepSqliteIsAvailable();\n\n      _this15.ensureWebstoreIsOpen();\n\n      try {\n        const dbExistsResult = yield _this15.jeepSqliteElement.isDBExists(options);\n        return dbExistsResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  isDBOpen(options) {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      _this16.ensureJeepSqliteIsAvailable();\n\n      _this16.ensureWebstoreIsOpen();\n\n      try {\n        const isDBOpenResult = yield _this16.jeepSqliteElement.isDBOpen(options);\n        return isDBOpenResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  isDatabase(options) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      _this17.ensureJeepSqliteIsAvailable();\n\n      _this17.ensureWebstoreIsOpen();\n\n      try {\n        const isDatabaseResult = yield _this17.jeepSqliteElement.isDatabase(options);\n        return isDatabaseResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  isTableExists(options) {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      _this18.ensureJeepSqliteIsAvailable();\n\n      _this18.ensureWebstoreIsOpen();\n\n      try {\n        const tableExistsResult = yield _this18.jeepSqliteElement.isTableExists(options);\n        return tableExistsResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  deleteDatabase(options) {\n    var _this19 = this;\n\n    return _asyncToGenerator(function* () {\n      _this19.ensureJeepSqliteIsAvailable();\n\n      _this19.ensureWebstoreIsOpen();\n\n      try {\n        yield _this19.jeepSqliteElement.deleteDatabase(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  isJsonValid(options) {\n    var _this20 = this;\n\n    return _asyncToGenerator(function* () {\n      _this20.ensureJeepSqliteIsAvailable();\n\n      _this20.ensureWebstoreIsOpen();\n\n      try {\n        const isJsonValidResult = yield _this20.jeepSqliteElement.isJsonValid(options);\n        return isJsonValidResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  importFromJson(options) {\n    var _this21 = this;\n\n    return _asyncToGenerator(function* () {\n      _this21.ensureJeepSqliteIsAvailable();\n\n      _this21.ensureWebstoreIsOpen();\n\n      try {\n        const importFromJsonResult = yield _this21.jeepSqliteElement.importFromJson(options);\n        return importFromJsonResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  exportToJson(options) {\n    var _this22 = this;\n\n    return _asyncToGenerator(function* () {\n      _this22.ensureJeepSqliteIsAvailable();\n\n      _this22.ensureWebstoreIsOpen();\n\n      try {\n        const exportToJsonResult = yield _this22.jeepSqliteElement.exportToJson(options);\n        return exportToJsonResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  createSyncTable(options) {\n    var _this23 = this;\n\n    return _asyncToGenerator(function* () {\n      _this23.ensureJeepSqliteIsAvailable();\n\n      _this23.ensureWebstoreIsOpen();\n\n      try {\n        const createSyncTableResult = yield _this23.jeepSqliteElement.createSyncTable(options);\n        return createSyncTableResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  setSyncDate(options) {\n    var _this24 = this;\n\n    return _asyncToGenerator(function* () {\n      _this24.ensureJeepSqliteIsAvailable();\n\n      _this24.ensureWebstoreIsOpen();\n\n      try {\n        yield _this24.jeepSqliteElement.setSyncDate(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  getSyncDate(options) {\n    var _this25 = this;\n\n    return _asyncToGenerator(function* () {\n      _this25.ensureJeepSqliteIsAvailable();\n\n      _this25.ensureWebstoreIsOpen();\n\n      try {\n        const getSyncDateResult = yield _this25.jeepSqliteElement.getSyncDate(options);\n        return getSyncDateResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  deleteExportedRows(options) {\n    var _this26 = this;\n\n    return _asyncToGenerator(function* () {\n      _this26.ensureJeepSqliteIsAvailable();\n\n      _this26.ensureWebstoreIsOpen();\n\n      try {\n        yield _this26.jeepSqliteElement.deleteExportedRows(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  addUpgradeStatement(options) {\n    var _this27 = this;\n\n    return _asyncToGenerator(function* () {\n      _this27.ensureJeepSqliteIsAvailable();\n\n      _this27.ensureWebstoreIsOpen();\n\n      try {\n        yield _this27.jeepSqliteElement.addUpgradeStatement(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  copyFromAssets(options) {\n    var _this28 = this;\n\n    return _asyncToGenerator(function* () {\n      _this28.ensureJeepSqliteIsAvailable();\n\n      _this28.ensureWebstoreIsOpen();\n\n      try {\n        yield _this28.jeepSqliteElement.copyFromAssets(options);\n        return;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n\n  getDatabaseList() {\n    var _this29 = this;\n\n    return _asyncToGenerator(function* () {\n      _this29.ensureJeepSqliteIsAvailable();\n\n      _this29.ensureWebstoreIsOpen();\n\n      try {\n        const databaseListResult = yield _this29.jeepSqliteElement.getDatabaseList();\n        return databaseListResult;\n      } catch (err) {\n        throw new Error(`${err}`);\n      }\n    })();\n  }\n  /**\n   * Checks if the `jeep-sqlite` element is present in the DOM.\n   * If it's not in the DOM, this method throws an Error.\n   *\n   * Attention: This will always fail, if the `intWebStore()` method wasn't called before.\n   */\n\n\n  ensureJeepSqliteIsAvailable() {\n    if (this.jeepSqliteElement === null) {\n      throw new Error(`The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.`);\n    }\n  }\n\n  ensureWebstoreIsOpen() {\n    if (!this.isWebStoreOpen) {\n      /**\n       * if (!this.isWebStoreOpen)\n        this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n       */\n      throw new Error('WebStore is not open yet. You have to call \"initWebStore()\" first.');\n    }\n  } ////////////////////////////////////\n  ////// UNIMPLEMENTED METHODS\n  ////////////////////////////////////\n\n\n  getUrl() {\n    var _this30 = this;\n\n    return _asyncToGenerator(function* () {\n      throw _this30.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  getMigratableDbList(options) {\n    var _this31 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('getMigratableDbList', options);\n      throw _this31.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  addSQLiteSuffix(options) {\n    var _this32 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('addSQLiteSuffix', options);\n      throw _this32.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  deleteOldDatabases(options) {\n    var _this33 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('deleteOldDatabases', options);\n      throw _this33.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  moveDatabasesAndAddSuffix(options) {\n    var _this34 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('moveDatabasesAndAddSuffix', options);\n      throw _this34.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  isSecretStored() {\n    var _this35 = this;\n\n    return _asyncToGenerator(function* () {\n      throw _this35.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  setEncryptionSecret(options) {\n    var _this36 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('setEncryptionSecret', options);\n      throw _this36.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  changeEncryptionSecret(options) {\n    var _this37 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('changeEncryptionSecret', options);\n      throw _this37.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  clearEncryptionSecret() {\n    var _this38 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('clearEncryptionSecret');\n      throw _this38.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  getNCDatabasePath(options) {\n    var _this39 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('getNCDatabasePath', options);\n      throw _this39.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  createNCConnection(options) {\n    var _this40 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('createNCConnection', options);\n      throw _this40.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  closeNCConnection(options) {\n    var _this41 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('closeNCConnection', options);\n      throw _this41.unimplemented('Not implemented on web.');\n    })();\n  }\n\n  isNCDatabase(options) {\n    var _this42 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('isNCDatabase', options);\n      throw _this42.unimplemented('Not implemented on web.');\n    })();\n  }\n\n}","map":{"version":3,"sources":["/Users/jaymardaligdig/Desktop/poskimay/offline-version/node_modules/@capacitor-community/sqlite/dist/esm/web.js"],"names":["WebPlugin","CapacitorSQLiteWeb","constructor","arguments","jeepSqliteElement","isWebStoreOpen","initWebStore","customElements","whenDefined","document","querySelector","ensureJeepSqliteIsAvailable","addEventListener","event","notifyListeners","detail","isStoreOpen","saveToStore","options","ensureWebstoreIsOpen","err","Error","echo","echoResult","createConnection","open","closeConnection","getVersion","versionResult","checkConnectionsConsistency","consistencyResult","close","getTableList","tableListResult","execute","executeResult","executeSet","run","runResult","query","queryResult","isDBExists","dbExistsResult","isDBOpen","isDBOpenResult","isDatabase","isDatabaseResult","isTableExists","tableExistsResult","deleteDatabase","isJsonValid","isJsonValidResult","importFromJson","importFromJsonResult","exportToJson","exportToJsonResult","createSyncTable","createSyncTableResult","setSyncDate","getSyncDate","getSyncDateResult","deleteExportedRows","addUpgradeStatement","copyFromAssets","getDatabaseList","databaseListResult","getUrl","unimplemented","getMigratableDbList","console","log","addSQLiteSuffix","deleteOldDatabases","moveDatabasesAndAddSuffix","isSecretStored","setEncryptionSecret","changeEncryptionSecret","clearEncryptionSecret","getNCDatabasePath","createNCConnection","closeNCConnection","isNCDatabase"],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class CapacitorSQLiteWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.jeepSqliteElement = null;\n        this.isWebStoreOpen = false;\n    }\n    async initWebStore() {\n        await customElements.whenDefined('jeep-sqlite');\n        this.jeepSqliteElement = document.querySelector('jeep-sqlite');\n        this.ensureJeepSqliteIsAvailable();\n        this.jeepSqliteElement.addEventListener('jeepSqliteImportProgress', (event) => {\n            this.notifyListeners('sqliteImportProgressEvent', event.detail);\n        });\n        this.jeepSqliteElement.addEventListener('jeepSqliteExportProgress', (event) => {\n            this.notifyListeners('sqliteExportProgressEvent', event.detail);\n        });\n        if (!this.isWebStoreOpen) {\n            this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n        }\n        return;\n    }\n    async saveToStore(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.saveToStore(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async echo(options) {\n        this.ensureJeepSqliteIsAvailable();\n        const echoResult = await this.jeepSqliteElement.echo(options);\n        return echoResult;\n    }\n    async createConnection(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.createConnection(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async open(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.open(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async closeConnection(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.closeConnection(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getVersion(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const versionResult = await this.jeepSqliteElement.getVersion(options);\n            return versionResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async checkConnectionsConsistency(options) {\n        this.ensureJeepSqliteIsAvailable();\n        try {\n            const consistencyResult = await this.jeepSqliteElement.checkConnectionsConsistency(options);\n            return consistencyResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async close(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.close(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getTableList(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const tableListResult = await this.jeepSqliteElement.getTableList(options);\n            return tableListResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async execute(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const executeResult = await this.jeepSqliteElement.execute(options);\n            return executeResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async executeSet(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const executeResult = await this.jeepSqliteElement.executeSet(options);\n            return executeResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async run(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const runResult = await this.jeepSqliteElement.run(options);\n            return runResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async query(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const queryResult = await this.jeepSqliteElement.query(options);\n            return queryResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDBExists(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const dbExistsResult = await this.jeepSqliteElement.isDBExists(options);\n            return dbExistsResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDBOpen(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isDBOpenResult = await this.jeepSqliteElement.isDBOpen(options);\n            return isDBOpenResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isDatabase(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isDatabaseResult = await this.jeepSqliteElement.isDatabase(options);\n            return isDatabaseResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isTableExists(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const tableExistsResult = await this.jeepSqliteElement.isTableExists(options);\n            return tableExistsResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async deleteDatabase(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.deleteDatabase(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async isJsonValid(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const isJsonValidResult = await this.jeepSqliteElement.isJsonValid(options);\n            return isJsonValidResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async importFromJson(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const importFromJsonResult = await this.jeepSqliteElement.importFromJson(options);\n            return importFromJsonResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async exportToJson(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const exportToJsonResult = await this.jeepSqliteElement.exportToJson(options);\n            return exportToJsonResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async createSyncTable(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const createSyncTableResult = await this.jeepSqliteElement.createSyncTable(options);\n            return createSyncTableResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async setSyncDate(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.setSyncDate(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getSyncDate(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const getSyncDateResult = await this.jeepSqliteElement.getSyncDate(options);\n            return getSyncDateResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async deleteExportedRows(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.deleteExportedRows(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async addUpgradeStatement(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.addUpgradeStatement(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async copyFromAssets(options) {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            await this.jeepSqliteElement.copyFromAssets(options);\n            return;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    async getDatabaseList() {\n        this.ensureJeepSqliteIsAvailable();\n        this.ensureWebstoreIsOpen();\n        try {\n            const databaseListResult = await this.jeepSqliteElement.getDatabaseList();\n            return databaseListResult;\n        }\n        catch (err) {\n            throw new Error(`${err}`);\n        }\n    }\n    /**\n     * Checks if the `jeep-sqlite` element is present in the DOM.\n     * If it's not in the DOM, this method throws an Error.\n     *\n     * Attention: This will always fail, if the `intWebStore()` method wasn't called before.\n     */\n    ensureJeepSqliteIsAvailable() {\n        if (this.jeepSqliteElement === null) {\n            throw new Error(`The jeep-sqlite element is not present in the DOM! Please check the @capacitor-community/sqlite documentation for instructions regarding the web platform.`);\n        }\n    }\n    ensureWebstoreIsOpen() {\n        if (!this.isWebStoreOpen) {\n            /**\n             * if (!this.isWebStoreOpen)\n              this.isWebStoreOpen = await this.jeepSqliteElement.isStoreOpen();\n             */\n            throw new Error('WebStore is not open yet. You have to call \"initWebStore()\" first.');\n        }\n    }\n    ////////////////////////////////////\n    ////// UNIMPLEMENTED METHODS\n    ////////////////////////////////////\n    async getUrl() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getMigratableDbList(options) {\n        console.log('getMigratableDbList', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async addSQLiteSuffix(options) {\n        console.log('addSQLiteSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteOldDatabases(options) {\n        console.log('deleteOldDatabases', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async moveDatabasesAndAddSuffix(options) {\n        console.log('moveDatabasesAndAddSuffix', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isSecretStored() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async setEncryptionSecret(options) {\n        console.log('setEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async changeEncryptionSecret(options) {\n        console.log('changeEncryptionSecret', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async clearEncryptionSecret() {\n        console.log('clearEncryptionSecret');\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getNCDatabasePath(options) {\n        console.log('getNCDatabasePath', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async createNCConnection(options) {\n        console.log('createNCConnection', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async closeNCConnection(options) {\n        console.log('closeNCConnection', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async isNCDatabase(options) {\n        console.log('isNCDatabase', options);\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n"]},"metadata":{},"sourceType":"module"}